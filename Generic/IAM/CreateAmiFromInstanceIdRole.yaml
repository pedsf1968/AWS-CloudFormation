---
AWSTemplateFormatVersion: "2010-09-09"
Description:  "This template for creating a Role for CreateAmiFromInstanceId Lambda Function"

Parameters:
  # Global parameters
  Bucket:
    Default: "hawkfund-cloudformation"
    Description: CloudFormation buket URL
    Type: String
  BucketKey:
    Default: "63_VPCPrivateLink"
    Description: Key to find object in the bucket
    Type: String
  BucketObject:
    Default: "Data.json"
    Description: "File to store data in the bucket"
    Type: String
  EnvironmentName:
    AllowedValues: [ "dev", "test", "prod" ]
    ConstraintDescription: "Must specify dev, test or prod"
    Default: "dev"
    Description: "Environment name that prefix all resources"
    Type: String    
  ProjectName:
    Default: "ANS"
    Description: "Project name that prefix all resources"
    Type: String
  SaveInS3File:
    AllowedValues: [ "false", "true" ]
    Default: "false"
    Description: "Save resources information in s3 file"
    Type: String

Conditions:
  saveInS3File: !Equals [ !Ref SaveInS3File, "true"]

Resources:
  CreateAmiFromInstanceIdRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - 'sts:AssumeRole'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
      Path: "/"
      Policies:
      - PolicyName: CreateAmiFromInstanceIdPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - 'ec2:DescribeInstances'
              - 'ec2:DescribeImages'
              - 'ec2:CreateImage'
              - 'ec2:DeregisterImage'
              - 'ec2:DescribeSnapshots'
              - 'ec2:DeleteSnapshot'
            Resource: ['*']
      RoleName: CreateAmiFromInstanceIdRole
      Tags:
        - Key: EnvironmentName
          Value: !Ref EnvironmentName
        - Key: Name
          Value: !Sub "${ProjectName}-${EnvironmentName}-CreateAmiFromInstanceIdRole"
        - Key: ProjectName
          Value: !Ref ProjectName

  CreateAmiFromInstanceIdRoleToS3:
    Type: AWS::CloudFormation::CustomResource
    Condition: saveInS3File
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      ServiceToken: !Join [ ":", [ "arn:aws:lambda", !Sub "${AWS::Region}", !Sub "${AWS::AccountId}", "function:IAMResourceToS3"]]
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Ref BucketKey
      BucketObject: !Ref BucketObject
      Region: !Ref AWS::Region
      ResourceType: "Role"
      Key: !Sub "${ProjectName}-${EnvironmentName}-CreateAmiFromInstanceIdRole"
      Value: !Ref CreateAmiFromInstanceIdRoleS3

Outputs:
  RoleArn:
    Description: "CreateAmiFromInstanceId Role Arn"
    Value: !GetAtt CreateAmiFromInstanceIdRole.Arn
  RoleId:
    Description: "CreateAmiFromInstanceId Role ID"
    Value: !Ref AcceptVpcPeeringConnectionRole