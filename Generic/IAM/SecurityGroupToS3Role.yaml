---
AWSTemplateFormatVersion: "2010-09-09"
Description:  "This template for creating a Role for SecurityGroupToS3Role Lambda Function"

Parameters:     
  # Global parameters
  Bucket:
    Default: "hawkfund-cloudformation"
    Description: CloudFormation buket URL
    Type: String
  BucketKey:
    Default: "54_VPCGatewayEndpointForS3"
    Description: Key to find object in the bucket
    Type: String
  BucketObject:
    Default: "Data.json"
    Description: "File to store data in the bucket"
    Type: String
  EnvironmentName:
    AllowedValues: ["dev", "test", "staging", "prod"]
    ConstraintDescription: "Must specify dev, test or prod"
    Default: "dev"
    Description: "Environment name that prefix all resources"
    Type: String    
  ProjectName:
    Default: "ANS"
    Description: "Project name that prefix all resources"
    Type: String
  SaveInS3File:
    AllowedValues: [ "false", "true" ]
    Default: "false"
    Description: "Save resources information in s3 file"
    Type: String

  # Stack parameters
  RoleName:
    Default: "SecurityGroupToS3"
    Description: "The name of the Role."
    Type: String

Conditions:
  SaveInS3File: !Equals [ !Ref SaveInS3File, "true"]

Resources:
  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
      Path: "/"
      Policies:
      - PolicyName: UpdateParametersFromS3-Policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
            - s3:List*
            Resource: 
            - !Join [":", ["arn:aws:s3::", !Sub "${Bucket}/${BucketKey}"]]
            - !Join [":", ["arn:aws:s3::", !Sub "${Bucket}/${BucketKey}/*"]]
      - PolicyName: !Sub "${RoleName}-Policy"
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ec2:DescribeSecurityGroups
            Resource: 
            - "*"
      RoleName: !Ref RoleName
      Tags:
        - Key: EnvironmentName
          Value: !Ref EnvironmentName
        - Key: Name
          Value: !Sub "${ProjectName}-${EnvironmentName}-${RoleName}"
        - Key: ManagedBy
          Value: "CloudFormation"
        - Key: ProjectName
          Value: !Ref ProjectName

  RoleToS3:
    Type: AWS::CloudFormation::CustomResource
    Condition: SaveInS3File
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      ServiceToken: !Join [ ":", [ "arn:aws:lambda", !Sub "${AWS::Region}", !Sub "${AWS::AccountId}", "function:IAMResourceToS3"]]
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Ref BucketKey
      BucketObject: !Ref BucketObject
      Region: !Ref AWS::Region
      ResourceType: "Role"
      Key: !Sub "${AWS::Region}:${ProjectName}:${EnvironmentName}:IAM:Role:${RoleName}"
      Value: !Ref Role

Outputs:
  RoleArn:
    Description: "Role Arn"
    Value: !GetAtt Role.Arn
  RoleId:
    Description: "Role ID"
    Value: !Ref Role