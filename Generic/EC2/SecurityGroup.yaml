---
AWSTemplateFormatVersion: "2010-09-09"
Description:  "Generic template create Security Groups"

Parameters:
  # Global parameters
  Bucket:
    Default: "hawkfund-cloudformation"
    Description: CloudFormation buket URL
    Type: String
  BucketKey:
    Default: "63_VPCPrivateLink"
    Description: Key to find object in the bucket
    Type: String
  BucketObject:
    Default: "Data.json"
    Description: "File to store data in the bucket"
    Type: String
  EnvironmentName:
    AllowedValues: ["dev", "test", "staging", "prod"]
    ConstraintDescription: "Must specify dev, test or prod"
    Default: "dev"
    Description: "Environment name that prefix all resources"
    Type: String    
  ProjectName:
    Default: "ANS"
    Description: "Project name that prefix all resources"
    Type: String
  SaveInS3File:
    AllowedValues: [ "false", "true" ]
    Default: "false"
    Description: "Save resources information in s3 file"
    Type: String

# Stack parameters
  Name:
    Default: "Default"
    Description: "Security Group name"
    Type: String
  SecurityGroupDescription:
    Type: String
  SecurityGroupName:
    Type: String
  SecurityGroupIngress:
    Type: String
    Default: "0.0.0.0/0"
  VpcId:
    Description: "ID of the VPC"
    Type: String

Conditions:
  SaveInS3File: !Equals [ !Ref SaveInS3File, "true"]

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Ref SecurityGroupDescription
      GroupName: !Sub "${ProjectName}-${EnvironmentName}-${SecurityGroupName}"
      SecurityGroupIngress: !Ref SecurityGroupIngress
      Tags:
        - Key: EnvironmentName
          Value: !Ref EnvironmentName
        - Key: Name
          Value:  !Sub "${ProjectName}-${EnvironmentName}-${Name}"
        - Key: ManagedBy
          Value: "CloudFormation"
        - Key: ProjectName
          Value: !Ref ProjectName
      VpcId: !Ref VpcId

  SecurityGroupIdToS3:
    Type: AWS::CloudFormation::CustomResource
    Condition: SaveInS3File 
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      ServiceToken: !Join [ ":", [ "arn:aws:lambda", !Sub "${AWS::Region}", !Sub "${AWS::AccountId}", "function:UpdateParametersFromS3"]]
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Ref BucketKey
      BucketObject: !Ref BucketObject
      Key: !Sub "${AWS::Region}:${ProjectName}:${EnvironmentName}:EC2:SecurityGroup:${Name}:Id"
      Value: !Ref SecurityGroup


  SecurityGroupToS3:
    Type: AWS::CloudFormation::CustomResource
    Condition: SaveInS3File
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      ServiceToken: !Join [ ":", [ "arn:aws:lambda", !Sub "${AWS::Region}", !Sub "${AWS::AccountId}", "function:SecurityGroupToS3"]]
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Ref BucketKey
      BucketObject: !Ref BucketObject
      Key: !Sub "${AWS::Region}:${ProjectName}:${EnvironmentName}:EC2:SecurityGroup:${Name}"
      Value: !Ref SecurityGroup

Outputs:
  SecurityGroupId:
    Description: "Security Group Id"
    Value: !GetAtt SecurityGroup.GroupId