---

AWSTemplateFormatVersion: "2010-09-09"
Description:  This template deploys a VPC, Public and Private Subnets

Parameters:
  # Global parameters
  Bucket:
    Default: "hawkfund-cloudformation"
    Description: CloudFormation buket URL
    Type: String
  BucketKey:
    Default: "54_VPCPeeringAcrossRegionAndAccount"
    Description: Key to find object in the bucket
    Type: String
  BucketObject:
    Default: "Data.json"
    Description: "File to store data in the bucket"
    Type: String
  EnvironmentName:
    AllowedValues: ["dev", "test", "staging", "prod"]
    ConstraintDescription: "Must specify dev, test or prod"
    Default: "dev"
    Description: "Environment name that prefix all resources"
    Type: String    
  ProjectName:
    Default: "ANS"
    Description: "Project name that prefix all resources"
    Type: String
  SaveInS3File:
    AllowedValues: [ "false", "true" ]
    Default: "true"
    Description: "Save resources information in s3 file"
    Type: String

  # Stack parameters
  VpcCidrBlock:
    Description: CIRD block of the VPC
    Type: String
  VpcName:
    Description: VPC name
    Type: String
  SubnetCidrBlock:
    Description: Subnet CIRD block of the VPC
    Type: String
  SubnetName:
    Description: Subnet name
    Type: String
  MapPublicIpOnLaunch:
    Description: Define if the subnet is public
    Default: false
    Type: String
    AllowedValues:
      - true
      - false

Conditions:
  isPublicsubnet: !Equals [ !Ref MapPublicIpOnLaunch, true ]


Resources:
  # VPC, DHCPOptions, Association and App and DB Subnets
  VpcStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/Generic/VPC/Vpc.yaml"
      TimeoutInMinutes: 5
      Parameters:
        Bucket: !Ref Bucket
        BucketKey: !Ref BucketKey
        BucketObject: !Ref BucketObject
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        SaveInS3File: !Ref SaveInS3File
        CidrBlock: !Ref VpcCidrBlock
        EnableDnsSupport: "false"
        EnableDnsHostnames: "false"
        InstanceTenancy: default
        VpcName: !Ref VpcName

  SubnetStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/Generic/VPC/Subnet.yaml"
      TimeoutInMinutes: 5
      Parameters:
        Bucket: !Ref Bucket
        BucketKey: !Ref BucketKey
        BucketObject: !Ref BucketObject
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        AvailabilityZone: !Select [ 0, !GetAZs ]
        CidrBlock: !Ref   SubnetCidrBlock
        MapPublicIpOnLaunch: !Ref MapPublicIpOnLaunch
        SaveInS3File: !Ref SaveInS3File
        SubnetName: !If [ isPublicsubnet, !Sub "${SubnetName}-Public", !Sub "${SubnetName}-Private"]
        VpcId: !GetAtt VpcStack.Outputs.VpcId

Outputs:
  VpcId:
    Description: Id of the VPC
    Value: !GetAtt VpcStack.Outputs.VpcId
  SubnetId:
    Description: Id of the Subnet
    Value: !GetAtt SubnetStack.Outputs.SubnetId