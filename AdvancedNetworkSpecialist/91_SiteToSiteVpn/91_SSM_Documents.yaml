---
AWSTemplateFormatVersion: "2010-09-09"
Description:  This template create Internet Gateway and Attachement

Parameters:
  # Global parameters
  Bucket:
    Description: "CloudFormation bucket URL"
    Type: String
    Default: "hawkfund-cloudformation"
  BucketKey:
    Description: "Key to find object in the bucket"
    Type: String
    Default: "91_SiteToSiteVpn"
  BucketObject:
    Description: "File to store data in the bucket"
    Type: String
    Default: "Data.json"
  EnvironmentName:
    Description: "Environment name that prefix all resources"
    Type: String
    Default: "dev"
    AllowedValues:
      - "dev"
      - "test"
      - "prod"
    ConstraintDescription: Must specify dev, test or prod
  ProjectName:
    Description: "Project name that prefix all resources"
    Type: String
    Default: "ANS"
  SaveInS3File:
    AllowedValues: [ "false", "true" ]
    Default: "false"
    Description: "Save resources information in s3 file"
    Type: String

  # Stack parameters
  CustomerInstanceName:
    Default: "OpenSwan"
    Description: "Name of the Customer side Instance"
    Type: String
  InstanceId:
    Description: "Id of the Instance"
    Type: String
  IpsecLeftCidr:
    Description: "CIDR of the left IPSEC"
    Type: String
  IpsecRightCidr:
    Description: "CIDR of the right IPSEC"
    Type: String
  RemoteRegion:
    Default: ""
    Description: "The remote Region"
    Type: String
  StsVpnName: 
    Default: "Site2Site"
    Description: "The VPN Site to Site name"
    Type: String
  OutputS3BucketName:
    Description: "The Bucket name for logs"
    Type: String
  OutputS3KeyPrefix:
    Default: "logs/"
    Description: "Logs prefix"
    Type: String

Conditions:
  IsEuWest3: !Equals [!Ref "AWS::Region", "eu-west-3" ]

Resources:
  LibreswanSSMDocument:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/Generic/SSM/LibreswanSSMDocument.yaml"
      TimeoutInMinutes: 10

  GetIpsecLeftId:
    Type: AWS::CloudFormation::CustomResource
    Condition: IsEuWest3
    Properties:
      ServiceToken: !Join [ ":", [ "arn:aws:lambda", !Sub "${AWS::Region}", !Sub "${AWS::AccountId}", "function:GetParametersFromS3"]]
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Ref BucketKey
      BucketObject: !Ref BucketObject
      Key: !Join [ ":", [ !Sub "${AWS::Region}", !Ref ProjectName, !Ref EnvironmentName, "EC2:Instance", !Ref CustomerInstanceName,"PublicIpAddress"]]

  GetIpsecRightId:
    Type: AWS::CloudFormation::CustomResource
    Condition: IsEuWest3
    Properties:
      ServiceToken: !Join [ ":", [ "arn:aws:lambda", !Sub "${AWS::Region}", !Sub "${AWS::AccountId}", "function:GetParametersFromS3"]]
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Ref BucketKey
      BucketObject: !Ref BucketObject
      Key: !Join [ ":", [ !Ref RemoteRegion, !Ref ProjectName, !Ref EnvironmentName, "EC2:VpnConnection", !Ref StsVpnName, "Options:TunnelOptions:0:OutsideIpAddress"]]

  GetIpsecSecret:
    Type: AWS::CloudFormation::CustomResource
    Condition: IsEuWest3
    Properties:
      ServiceToken: !Join [ ":", [ "arn:aws:lambda", !Sub "${AWS::Region}", !Sub "${AWS::AccountId}", "function:GetParametersFromS3"]]
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Ref BucketKey
      BucketObject: !Ref BucketObject
      Key: !Join [ ":", [ !Ref RemoteRegion, !Ref ProjectName, !Ref EnvironmentName, "EC2:VpnConnection", !Ref StsVpnName, "Options:TunnelOptions:0:PreSharedKey"]]


  LibreswanInstallSSMAssociation:
    Type: AWS::SSM::Association
    Condition: IsEuWest3
    DependsOn:
      - LibreswanSSMDocument
    Properties:
      AssociationName: LibreswanDeploySSMAssociation
      Name: LibreswanSSMDocument
      Targets:
      - Key: InstanceIds
        Values:
        - !Ref InstanceId
      OutputLocation:
        S3Location: 
          OutputS3BucketName: !Ref OutputS3BucketName
          OutputS3KeyPrefix: !Ref OutputS3KeyPrefix
      Parameters:
        IpsecLeftId: 
          - !GetAtt GetIpsecLeftId.Value
        IpsecRightId: 
          - !GetAtt GetIpsecRightId.Value
        IpsecLeftCidr: 
          - !Ref IpsecLeftCidr
        IpsecRightCidr: 
          - !Ref IpsecRightCidr
        IpsecSecret: 
          - !GetAtt GetIpsecSecret.Value

Outputs:
  IpsecLeftId:
    Description: "Id of the left IPSEC"
    Value: !If 
      - IsEuWest3
      - !GetAtt GetIpsecLeftId.Value
      - ""
    Export:
      Name: !Join [ ":", [ !Sub "${AWS::Region}", !Ref ProjectName, !Ref EnvironmentName, "EC2:Instance", !Ref CustomerInstanceName,"NetworkInterfaces:PublicIp"]]
  IpsecRightId:
    Description: "Id of the right IPSEC"
    Value: !If 
      - IsEuWest3
      - !GetAtt GetIpsecRightId.Value
      - ""
    Export:
      Name: !Join [ ":", [ !Ref RemoteRegion, !Ref ProjectName, !Ref EnvironmentName, "EC2:VPNConnection", !Ref StsVpnName, "Options:TunnelOptions:0:OutsideIpAddress"]]
  IpsecRightCidr:
    Description: "CIDR of the right IPSEC"
    Value: !Ref IpsecRightCidr
    Export:
      Name: !Join [ ":", [ !Ref RemoteRegion, !Ref ProjectName, !Ref EnvironmentName, "EC2:Instance", !Ref CustomerInstanceName,"NetworkInterfaces:PublicIp"]]
  IpsecSecret:
    Description: "Secret of the IPSEC"
    Value: !If 
      - IsEuWest3
      - !GetAtt GetIpsecSecret.Value
      - ""
    Export:
      Name: !Join [ ":", [ !Ref RemoteRegion, !Ref ProjectName, !Ref EnvironmentName, "EC2:VPNConnection", !Ref StsVpnName, "Options:TunnelOptions:0:PreSharedKey"]]
