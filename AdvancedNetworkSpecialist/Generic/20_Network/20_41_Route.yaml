---
AWSTemplateFormatVersion: "2010-09-09"
Description:  This template create Tables and Route Tables

Parameters:
  # Global parameters
  EnvironmentName:
    Description: "Environment name that prefix all resources"
    Type: String
    Default: "dev"
    AllowedValues:
      - "dev"
      - "test"
      - "prod"
    ConstraintDescription: Must specify dev, test or prod
  ProjectName:
    Description: "Project name that prefix all resources"
    Type: String
    Default: "ANS"

  # Stack parameters
  DestinationCidrBlock:
    Description: "The IPv4 CIDR address block used for the destination match."
    Type: String
    Default: ""
  Destinationtype:
    Description: "The destination type of the route"
    Type: String
    Default: "InternetGateway"
    AllowedValues:
         - "InternetGateway"
         - "TransitGateway"
  InternetGatewayId:
    Description: "The ID of an internet gateway or virtual private gateway attached to your VPC."
    Type: String
    Default: ""
  RouteTableId:
    Description: "The ID of the route table for the route."
    Type: String
  TransitGatewayId:
    Description: "The ID of a transit gateway."
    Type: String
    Default: ""

Conditions:
  isInternetGatewayType: !Equals [ !Ref Destinationtype, "InternetGateway" ]
  isTransitGatewayType: !Equals [ !Ref Destinationtype, "TransitGateway" ]

Resources:  
  InternetGatewayRoute:
    Type: AWS::EC2::Route
    Condition: isInternetGatewayType
    Properties:
      DestinationCidrBlock: !Ref DestinationCidrBlock
      GatewayId: !Ref InternetGatewayId
      RouteTableId: !Ref RouteTableId

  TransitGatewayRoute:
    Type: AWS::EC2::Route
    Condition: isTransitGatewayType
    Properties:
      DestinationCidrBlock: !Ref DestinationCidrBlock
      RouteTableId: !Ref RouteTableId
      TransitGatewayId: !Ref TransitGatewayId

Outputs:
  RouteId:
    Description: "ID of the Route"
    Value: !If [  isInternetGatewayType, !Ref InternetGatewayRoute, !Ref TransitGatewayRoute ]
