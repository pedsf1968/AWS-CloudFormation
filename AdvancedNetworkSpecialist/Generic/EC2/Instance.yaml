AWSTemplateFormatVersion: "2010-09-09"
Description:  "Generic template create Instances"

Parameters:
  # Global parameters
  Bucket:
    Default: "hawkfund-cloudformation"
    Description: "CloudFormation bucket URL"
    Type: String    
  BucketKey:
    Default: "data.json"
    Description: File name to save parameters in the bucket
    Type: String
  EnvironmentName:
    Description: "Environment name that prefix all resources"
    Type: String
    Default: "dev"
    AllowedValues:
      - "dev"
      - "test"
      - "prod"
    ConstraintDescription: Must specify dev, test or prod
  ProjectName:
    Description: "Project name that prefix all resources"
    Type: String
    Default: "ANS"
  SaveInS3File:
    AllowedValues:
      - "false"
      - "true"
    Default: "false"
    Description: "Backup values in file specified by Bucket and BucketKey"
    Type: String

# Stack parameters
  AvailabilityZone:
    Description: "Instance AZ"
    Type: String
  ElasticIP:
    AllowedValues:
      - "false"
      - "true"
    Default: "false"
    Description: "Create elastic IP for the instance"
    Type: String
  ImageId:
    Description: "Instance AMI"
    Type: AWS::EC2::Image::Id
    Default: ami-0d3f86bfba5ee6472
  InstanceName: 
    Description: "Instance name"
    Type: String
  InstanceType: 
    Description: "Type of Instance"
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.large
  KeyName: 
    Description: "Instance Key name"
    Type: String
  SecurityGroup:
    Description: "Instance Security Group ID"
    Type: String
  SubnetId:
    Description: "Instance Subnet ID"
    Type: String
  UserData:
    Description: "Script to launch on the first start"
    Type: String
    Default: ""

Conditions:
  hasElasticIP: !Equals [!Ref ElasticIP, "true" ]
  isSavedInS3File: !Equals [ !Ref SaveInS3File, "true"]

Resources:     
  Instance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:  !Ref AvailabilityZone
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroupIds: 
        - !Ref SecurityGroup
      SubnetId: !Ref SubnetId
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${EnvironmentName}-${InstanceName}"
      UserData: !Ref UserData

  InstanceEIP:
    Type: AWS::EC2::EIP
    Condition: hasElasticIP
    Properties:
      InstanceId: !Ref Instance
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${EnvironmentName}-${InstanceName}-EIP"

  InstanceIdBackup:
    Type: AWS::CloudFormation::CustomResource
    Condition: isSavedInS3File
    Properties:
      ServiceToken: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:UpdateParametersFromS3"
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Sub "${Bucket}/${BucketKey}"
      Key: !Sub "${AWS::Region}-${ProjectName}-${EnvironmentName}-${InstanceName}-Id"
      Value: !Ref Instance

  InstancePrivateIPBackup:
    Type: AWS::CloudFormation::CustomResource
    Condition: isSavedInS3File
    Properties:
      ServiceToken: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:UpdateParametersFromS3"
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Sub "${Bucket}/${BucketKey}"
      Key: !Sub "${AWS::Region}-${ProjectName}-${EnvironmentName}-${InstanceName}-PrivateIP"
      Value: !GetAtt Instance.PrivateIp

  InstancePublicIPBackup:
    Type: AWS::CloudFormation::CustomResource
    Condition: isSavedInS3File
    Properties:
      ServiceToken: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:UpdateParametersFromS3"
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Sub "${Bucket}/${BucketKey}"
      Key: !Sub "${AWS::Region}-${ProjectName}-${EnvironmentName}-${InstanceName}-PublicIP"
      Value: !If [ hasElasticIP, !GetAtt InstanceEIP.PublicIp, ""]

Outputs:
  InstanceId:
    Description: "Id of the Instance"
    Value: !Ref Instance
  InstancePrivateIP:
    Description: "Private IP v4 of the Instance"
    Value: !GetAtt Instance.PrivateIp
  InstancePublicIP:
    Description: "Public IP v4 of the Instance"
    Value: !If [ hasElasticIP, !GetAtt InstanceEIP.PublicIp, ""]
