AWSTemplateFormatVersion: "2010-09-09"
Description:  "Generic template create Instances"

Parameters:
  # Global parameters
  Bucket:
    Default: "hawkfund-cloudformation"
    Description: CloudFormation buket URL
    Type: String
  BucketKey:
    Default: "63_VPCPrivateLink"
    Description: Key to find object in the bucket
    Type: String
  BucketObject:
    Default: "Data.json"
    Description: "File to store data in the bucket"
    Type: String
  EnvironmentName:
    AllowedValues: [ "dev", "test", "prod" ]
    ConstraintDescription: "Must specify dev, test or prod"
    Default: "dev"
    Description: "Environment name that prefix all resources"
    Type: String    
  ProjectName:
    Default: "ANS"
    Description: "Project name that prefix all resources"
    Type: String
  SaveInS3File:
    AllowedValues: [ "false", "true" ]
    Default: "false"
    Description: "Save resources information in s3 file"
    Type: String

  # Stack parameters
  AvailabilityZone:
    Description: "Instance AZ"
    Type: String
  ElasticIP:
    AllowedValues:
      - "false"
      - "true"
    Default: "false"
    Description: "Create elastic IP for the instance"
    Type: String
  ImageId:
    Default: ami-08461dc8cd9e834e0
    Description: "Instance AMI"
    Type: AWS::EC2::Image::Id
  InstanceName: 
    Description: "Instance name"
    Type: String
  IamInstanceProfile: 
    Default: ""
    Description: "Instance Profile"
    Type: String    
  InstanceType: 
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.large
    Default: t2.micro
    Description: "Type of Instance"
    Type: String
  KeyName: 
    Default: "dso-paris"
    Description: "Instance Key name"
    Type: String
  SecurityGroup:
    Description: "Instance Security Group ID"
    Type: String
  SourceDestCheck:
    AllowedValues:
      - "false"
      - "true"
    Default: "true"
    Description: "Enable or disable source/destination checks"
    Type: String
  SubnetId:
    Description: "Instance Subnet ID"
    Type: String
  UserData:
    Default: ""
    Description: "Script to launch on the first start"
    Type: String

Conditions:
  hasElasticIP: !Equals [!Ref ElasticIP, "true" ]
  isSavedInS3File: !Equals [ !Ref SaveInS3File, "true"]
  elasticIPSavedInS3File: !And 
    - !Equals [!Ref ElasticIP, "true" ]
    - !Equals [ !Ref SaveInS3File, "true"]

Resources:     
  Instance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:  !Ref AvailabilityZone
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref IamInstanceProfile
      KeyName: !Ref KeyName
      SecurityGroupIds: 
        - !Ref SecurityGroup
      SubnetId: !Ref SubnetId
      SourceDestCheck: !Ref SourceDestCheck
      Tags:
        - Key: EnvironmentName
          Value: !Ref EnvironmentName
        - Key: Name
          Value: !Sub "${ProjectName}-${EnvironmentName}-${InstanceName}"
        - Key: ProjectName
          Value: !Ref ProjectName
      UserData: !Ref UserData

  EIP:
    Type: AWS::EC2::EIP
    Condition: hasElasticIP
    Properties:
      InstanceId: !Ref Instance
      Tags:
        - Key: EnvironmentName
          Value: !Ref EnvironmentName
        - Key: Name
          Value: !Sub "${ProjectName}-${EnvironmentName}-${InstanceName}-EIP"
        - Key: ProjectName
          Value: !Ref ProjectName

  InstanceIdBackup:
    Type: AWS::CloudFormation::CustomResource
    Condition: isSavedInS3File
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      ServiceToken: !Join [ ":", [ "arn:aws:lambda", !Sub "${AWS::Region}", !Sub "${AWS::AccountId}", "function:UpdateParametersFromS3"]]
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Ref BucketKey
      BucketObject: !Ref BucketObject
      Key: !Sub "${AWS::Region}:${ProjectName}:${EnvironmentName}:EC2:Instance:${InstanceName}:Id"
      Value: !Ref Instance

  InstancePrivateIPBackup:
    Type: AWS::CloudFormation::CustomResource
    Condition: isSavedInS3File
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      ServiceToken: !Join [ ":", [ "arn:aws:lambda", !Sub "${AWS::Region}", !Sub "${AWS::AccountId}", "function:UpdateParametersFromS3"]]
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Ref BucketKey
      BucketObject: !Ref BucketObject
      Key: !Sub "${AWS::Region}:${ProjectName}:${EnvironmentName}:EC2:Instance:${InstanceName}:PrivateIp"
      Value: !GetAtt Instance.PrivateIp

  InstancePublicIPBackup:
    Type: AWS::CloudFormation::CustomResource
    Condition: elasticIPSavedInS3File
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      ServiceToken: !Join [ ":", [ "arn:aws:lambda", !Sub "${AWS::Region}", !Sub "${AWS::AccountId}", "function:UpdateParametersFromS3"]]
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Ref BucketKey
      BucketObject: !Ref BucketObject
      Key: !Sub "${AWS::Region}:${ProjectName}:${EnvironmentName}:EC2:Instance:${InstanceName}:PublicIp"
      Value: !If [ hasElasticIP, !GetAtt EIP.PublicIp, ""]

  EIPBackup:
    Type: AWS::CloudFormation::CustomResource
    Condition: elasticIPSavedInS3File
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      ServiceToken: !Join [ ":", [ "arn:aws:lambda", !Sub "${AWS::Region}", !Sub "${AWS::AccountId}", "function:UpdateParametersFromS3"]]
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Ref BucketKey
      BucketObject: !Ref BucketObject
      Key: !Sub "${AWS::Region}:${ProjectName}:${EnvironmentName}:EC2:EIP:${InstanceName}:PublicIp"
      Value: !If [ hasElasticIP, !GetAtt EIP.PublicIp, ""]

Outputs:
  InstanceId:
    Description: "Id of the Instance"
    Value: !Ref Instance
  InstancePrivateIP:
    Description: "Private IP v4 of the Instance"
    Value: !GetAtt Instance.PrivateIp
  InstancePublicIP:
    Description: "Public IP v4 of the Instance"
    Value: !If [ hasElasticIP, !GetAtt EIP.PublicIp, ""]
