---
AWSTemplateFormatVersion: "2010-09-09"
Description:  "Generic template to deploy a VPC"

Parameters:
  # Global parameters
  Bucket:
    Default: "hawkfund-cloudformation"
    Description: "CloudFormation bucket URL"
    Type: String    
  BucketKey:
    Description: "Key to find object in the bucket"
    Type: String
    Default: ""
  BucketObject:
    Description: "File to store data in the bucket"
    Type: String
    Default: "Data.json"
  EnvironmentName:
    Description: "Environment name that prefix all resources"
    Type: String
    Default: "dev"
    AllowedValues:
      - "dev"
      - "test"
      - "prod"
    ConstraintDescription: Must specify dev, test or prod
  ProjectName:
    Description: "Project name that prefix all resources"
    Type: String
    Default: "ANS"
  SaveInS3File:
    AllowedValues:
      - "false"
      - "true"
    Default: "false"
    Description: "Backup values in file specified by Bucket and BucketKey"
    Type: String

  # Stack parameters
  CidrBlock:
    Description: "The IPv4 network range for the VPC, in CIDR notation."
    Type: String
  EnableDnsHostnames:
    Default: "true"
    Description: "Indicates whether the instances launched in the VPC get DNS hostnames."
    Type: String    
  EnableDnsSupport:
    Default: "true"
    Description: "Indicates whether the DNS resolution is supported for the VPC."
    Type: String    
  InstanceTenancy:
    AllowedValues: 
      - default
      - dedicated
      - host
    Default: default
    Description: "The allowed tenancy of instances launched into the VPC."
    Type: String    
  VpcName:
    Description: "VPC name"
    Type: String

Conditions:
  isSavedInS3File: !Equals [ !Ref SaveInS3File, "true"]

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref CidrBlock
      EnableDnsHostnames: !Ref EnableDnsHostnames
      EnableDnsSupport: !Ref EnableDnsSupport
      InstanceTenancy: !Ref InstanceTenancy
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${EnvironmentName}-${VpcName}-Vpc"

  VpcIdToS3:
    Type: AWS::CloudFormation::CustomResource
    Condition: isSavedInS3File
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      ServiceToken: !Join [ ":", [ "arn:aws:lambda", !Sub "${AWS::Region}", !Sub "${AWS::AccountId}", "function:UpdateParametersFromS3"]]
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Ref BucketKey
      BucketObject: !Ref BucketObject
      Key: !Sub "${AWS::Region}:${ProjectName}:${EnvironmentName}:EC2:VPC:${VpcName}:Id"
      Value: !Ref VPC

  VpcCidrToS3:
    Type: AWS::CloudFormation::CustomResource
    Condition: isSavedInS3File
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      ServiceToken: !Join [ ":", [ "arn:aws:lambda", !Sub "${AWS::Region}", !Sub "${AWS::AccountId}", "function:UpdateParametersFromS3"]]
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Ref BucketKey
      BucketObject: !Ref BucketObject
      Key: !Sub "${AWS::Region}:${ProjectName}:${EnvironmentName}:EC2:VPC:${VpcName}:Cidr"
      Value: !Ref CidrBlock

Outputs:
  VpcId:
    Description: "The ID of the VPC."
    Value: !Ref VPC
