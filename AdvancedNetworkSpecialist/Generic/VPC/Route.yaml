---
AWSTemplateFormatVersion: "2010-09-09"
Description:  This template create Tables and Route Tables

Parameters:
  # Global parameters
  Bucket:
    Default: "hawkfund-cloudformation"
    Description: "CloudFormation bucket URL"
    Type: String    
  BucketKey:
    Description: "Key to find object in the bucket"
    Type: String
    Default: ""
  BucketObject:
    Description: "File to store data in the bucket"
    Type: String
    Default: "Data.json"
  EnvironmentName:
    Description: "Environment name that prefix all resources"
    Type: String
    Default: "dev"
    AllowedValues:
      - "dev"
      - "test"
      - "prod"
    ConstraintDescription: Must specify dev, test or prod
  ProjectName:
    Description: "Project name that prefix all resources"
    Type: String
    Default: "ANS"
  SaveInS3File:
    AllowedValues:
      - "false"
      - "true"
    Default: "false"
    Description: "Backup values in file specified by Bucket and BucketKey"
    Type: String

  # Stack parameters
  DestinationCidrBlock:
    Description: "The IPv4 CIDR address block used for the destination match."
    Type: String
    Default: ""
  Destinationtype:
    Description: "The destination type of the route"
    Type: String
    Default: "InternetGateway"
    AllowedValues:
         - "InternetGateway"
         - "TransitGateway"
         - "VirtualPrivateGateway"
  GatewayId:
    Description: "The ID of an internet gateway or virtual private gateway attached to your VPC."
    Type: String
    Default: ""
  RouteTableId:
    Description: "The ID of the route table for the route."
    Type: String
  TransitGatewayId:
    Description: "The ID of a transit gateway."
    Type: String
    Default: ""
  
Conditions:
  
  isInternetOrVirtualPrivateGatewayType: !Or
    - !Equals [ !Ref Destinationtype, "InternetGateway" ]
    - !Equals [ !Ref Destinationtype, "VirtualPrivateGateway" ]
  isSavedInS3File: !Equals [ !Ref SaveInS3File, "true"]    
  isTransitGatewayType: !Equals [ !Ref Destinationtype, "TransitGateway" ]
  isVirtualPrivateGatewayType: !Equals [ !Ref Destinationtype, "VirtualPrivateGateway" ]

Resources:  
  InternetOrVirtualPrivateGatewayRoute:
    Type: AWS::EC2::Route
    Condition: isInternetOrVirtualPrivateGatewayType
    Properties:
      DestinationCidrBlock: !Ref DestinationCidrBlock
      GatewayId: !Ref GatewayId
      RouteTableId: !Ref RouteTableId

  InternetOrVirtualPrivateGatewayRoutePropagation:
    Type: AWS::EC2::VPNGatewayRoutePropagation
    Condition: isVirtualPrivateGatewayType
    Properties:
      RouteTableIds: 
        - !Ref RouteTableId
      VpnGatewayId: !Ref InternetOrVirtualPrivateGatewayRoute

  TransitGatewayRoute:
    Type: AWS::EC2::Route
    Condition: isTransitGatewayType
    Properties:
      DestinationCidrBlock: !Ref DestinationCidrBlock
      RouteTableId: !Ref RouteTableId
      TransitGatewayId: !Ref TransitGatewayId
      
  GatewayIdToS3:
    Type: AWS::CloudFormation::CustomResource
    Condition: isSavedInS3File
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      ServiceToken: !Join [ ":", [ "arn:aws:lambda", !Sub "${AWS::Region}", !Sub "${AWS::AccountId}", "function:UpdateParametersFromS3"]]
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Ref BucketKey
      BucketObject: !Ref BucketObject
      Key: !Sub "${AWS::Region}:${ProjectName}:${EnvironmentName}:EC2:Route:${Destinationtype}:Id"
      Value: !If [  isInternetOrVirtualPrivateGatewayType, !Ref InternetOrVirtualPrivateGatewayRoute, !Ref TransitGatewayRoute ]

Outputs:
  RouteId:
    Description: "ID of the Route"
    Value: !If [  isInternetOrVirtualPrivateGatewayType, !Ref InternetOrVirtualPrivateGatewayRoute, !Ref TransitGatewayRoute ]
