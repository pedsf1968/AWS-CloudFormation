---

AWSTemplateFormatVersion: "2010-09-09"
Description:  This template deploys a VPC, Public and Private Subnets

Parameters:
  # Global parameters
  Bucket:
    Description: CloudFormation buket URL
    Type: String
  BucketKey:
    Description: Key to find object in the bucket
    Type: String
  BucketObject:
    Description: File in the bucket that contain parameters
    Type: String

  # Stack parameters
  VPCCidrBlock:
    Description: CIRD block of the VPC
    Type: String
  VPCName:
    Description: VPC name
    Type: String
  SubnetCidrBlock:
    Description: Subnet CIRD block of the VPC
    Type: String
  SubnetName:
    Description: Subnet name
    Type: String
  SubnetPublic:
    Description: Define if the subnet is public
    Default: false
    Type: String
    AllowedValues:
      - true
      - false

Conditions:
  isPublicSubnet:
    !Equals ["true", !Ref SubnetPublic] 
  isPrivateSubnet:
    !Equals ["false", !Ref SubnetPublic] 

Resources:
  # VPC, DHCPOptions, Association and App and DB Subnets
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidrBlock
      EnableDnsSupport: "false"
      EnableDnsHostnames: "false"
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Ref VPCName

  VPCBackup:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:UpdateParametersFromS3"
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Sub "${BucketKey}/${BucketObject}"
      Key: !Sub "${AWS::AccountId}:${AWS::Region}:VPCID"
      Value: !Ref VPC      

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Condition: isPublicSubnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: !Ref SubnetCidrBlock
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Ref SubnetName

  PublicSubnetBackup:
    Type: AWS::CloudFormation::CustomResource
    Condition: isPublicSubnet
    Properties:
      ServiceToken: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:UpdateParametersFromS3"
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Sub "${BucketKey}/${BucketObject}"
      Key: !Sub "${AWS::AccountId}:${AWS::Region}:PublicSubnet"
      Value: !Ref PublicSubnet      

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Condition: isPrivateSubnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: !Ref SubnetCidrBlock
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Ref SubnetName

  PrivateSubnetBackup:
    Type: AWS::CloudFormation::CustomResource
    Condition: isPrivateSubnet
    Properties:
      ServiceToken: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:UpdateParametersFromS3"
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Sub "${BucketKey}/${BucketObject}"
      Key: !Sub "${AWS::AccountId}:${AWS::Region}:PrivateSubnet"
      Value: !Ref PrivateSubnet      

Outputs:
  VpcId:
    Description: Id of the VPC
    Value: !Ref VPC
  PublicSubnetId:
    Condition: isPublicSubnet
    Description: Id of the PublicSubnet
    Value: !Ref PublicSubnet
  PrivateSubnetId:
    Condition: isPrivateSubnet
    Description: Id of the PrivateSubnet
    Value: !Ref PrivateSubnet
