---
# aws cloudformation validate-template --template-body file:/19-NatInstance.yaml
# aws cloudformation create-stack --stack-name ANS-19 --template-body file://19-NatInstance.yaml
# aws cloudformation delete-stack --stack-name ANS-19

AWSTemplateFormatVersion: "2010-09-09"
Description:  This template deploys a VPC, Public and Private Subnets, Internet Gateway, Nat Instance, Route Table and Instance in private subnet


Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "VPC configuration"
        Parameters:
          - VPCName
          - VPCCidr
      - Label:
          default: "Subnet configuration"
        Parameters:
          - PublicSubnetName
          - PublicSubnetCidr
          - PrivateSubnetName
          - PrivateSubnetCidr
      - Label:
          default: "Gateways and Routes"
        Parameters:
          - InternetGatewayName
          - DefaultRouteTableName
          - PublicRouteTableName
          - PrivateRouteTableName
      - Label:
          default: "Instance configuration"
        Parameters:
          - NatInstanceName
          - NatInstanceImageId
          - PrivateInstanceName
          - PrivateInstanceImageId
          - KeyName
        
Parameters:
  VPCName:
    Description: VPC name
    Type: String
    Default: "My-VPC"
  VPCCidr:
    Description: VPC CIDR
    Type: String
    Default: 10.100.0.0/16
  PublicSubnetName:
    Description: Public Subnet name
    Type: String
    Default: "Public-Subnet"
  PublicSubnetCidr:
    Description: Public Subnet CIDR
    Type: String
    Default: 10.100.0.0/24
  PrivateSubnetName:
    Description: Private Subnet name
    Type: String
    Default: "Private-Subnet"
  PrivateSubnetCidr:
    Description: Private Subnet CIDR
    Type: String
    Default: 10.100.1.0/24
    
  InternetGatewayName:
    Description: Internet Gateway name
    Type: String
    Default: "VPC-IGW"
  DefaultRouteTableName:
    Description: Default Route Table name
    Type: String
    Default: "VPC-RT"
  PublicRouteTableName:
    Description: Public Route Table name
    Type: String
    Default: "PublicSubnet-RT"
  PrivateRouteTableName:
    Description: Private Route Table name
    Type: String
    Default: "PrivateSubnet-RT"

  NatInstanceName:
    Description: The NAT Instance name in Public Subnet
    Type: String
    Default: "NAT-Instance"
  PrivateInstanceName:
    Description: The Instance name in Private Subnet
    Type: String
    Default: "B-Instance"
  NatInstanceImageId:
    Description: The AMI number
    Type: AWS::EC2::Image::Id
    Default: ami-0d7c7fe775a76686f
  PrivateInstanceImageId:
    Description: The AMI number
    Type: AWS::EC2::Image::Id
    Default: ami-0997c2f07703b91fb
  KeyName:
    Description: The EC2 Key name
    Type: String
    Default: "dso-paris"

Resources:
  # VPC and Public and Private Subnets
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      Tags:
        - Key: Name
          Value: !Ref VPCName

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: !Ref PublicSubnetCidr
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Ref PublicSubnetName
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: !Ref PrivateSubnetCidr
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Ref PrivateSubnetName

  # Internet Gateway and Attachment
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref InternetGatewayName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  # Route, Route Table and Associations
  DefaultRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref DefaultRouteTableName
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref PublicRouteTableName
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref PrivateRouteTableName

  DefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  NatRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId: !Ref NatInstance

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet

  NatInstance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:  !Select [ 0, !GetAZs ]
      ImageId: !Ref NatInstanceImageId
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref SSHSecurityGroup
        - !Ref ICMPSecurityGroup
      SourceDestCheck: False
      SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: !Ref NatInstanceName
      # UserData:
      #   Fn::Base64: !Sub |
      #     !/bin/bash
      #     yum update -y
      #     service httpd start
      #     chkconfig httpd on          

  # Instances and Security Groups
  PrivateInstance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:  !Select [ 0, !GetAZs ]
      ImageId: !Ref PrivateInstanceImageId
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref SSHSecurityGroup
        - !Ref ICMPSecurityGroup
        - !Ref HTTPSecurityGroup
        - !Ref HTTPSSecurityGroup
      SubnetId: !Ref PrivateSubnet
      Tags:
        - Key: Name
          Value: !Ref PrivateInstanceName

  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: SSH-SG
  HTTPSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP
      SecurityGroupIngress:
      - CidrIp: !Ref VPCCidr
        FromPort: 80
        IpProtocol: tcp
        ToPort: 80
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: HTTP-SG
  HTTPSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP
      SecurityGroupIngress:
      - CidrIp: !Ref VPCCidr
        FromPort: 443
        IpProtocol: tcp
        ToPort: 443
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: HTTPS-SG
  ICMPSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable Ping
      SecurityGroupIngress:
      - CidrIp: !Ref VPCCidr
        FromPort: -1
        IpProtocol: icmp
        ToPort: -1
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: ICMP-SG

Outputs:
  VpcId:
    Description: Id of the VPC
    Value: !Ref VPC
  PublicSubnetId:
    Description: Id of the Public Subnet
    Value: !Ref PublicSubnet
  PrivateSubnetId:
    Description: Id of the Private Subnet
    Value: !Ref PrivateSubnet
  InternetGatewayId:
    Description: Id of the Internet Gateway
    Value: !Ref InternetGateway
  InternetGatewayAttachmentId:
    Description: Id of the Internet Gateway Attachment
    Value: !Ref InternetGatewayAttachment
  DefaultRouteId:
    Description: Id of the default Route Table
    Value: !Ref DefaultRoute
  PublicRouteTableId:
    Description: Id of the Public Route Table
    Value: !Ref PublicRouteTable
  PrivateRouteTableId:
    Description: Id of the Private Route Table
    Value: !Ref PrivateRouteTable
  PublicSubnetRouteTableAssociationId:
    Description: Id of the Public Subnet Route Table Association
    Value: !Ref PublicSubnetRouteTableAssociation
  PrivateSubnetRouteTableAssociationId:
    Description: Id of the Private Subnet Route Table Association
    Value: !Ref PrivateSubnetRouteTableAssociation
  SSHSecurityGroupId:
    Description: Id of the SSH Security Group
    Value: !Ref SSHSecurityGroup
  NatInstanceId:
    Description: Id of the Public Instance 
    Value: !Ref NatInstance
  NatInstanceInstancePrivateIP:
    Description: Private IP v4 of the Nat Instance 
    Value: !GetAtt NatInstance.PrivateIp
  NatInstancePublicIP:
    Description: Public IP v4 of the Nat Instance 
    Value: !GetAtt NatInstance.PublicIp
  PrivateInstanceId:
    Description: Id of the Private Instance 
    Value: !Ref PrivateInstance
  PrivateInstancePrivateIP:
    Description: Private IP v4 of the Private Instance 
    Value: !GetAtt PrivateInstance.PrivateIp
