---
AWSTemplateFormatVersion: "2010-09-09"
Description:  This template create all Security Groups

Parameters:
  # Global parameters
  Bucket:
    Default: "hawkfund-cloudformation"
    Description: CloudFormation buket URL
    Type: String
  BucketKey:
    Default: "63_VPCPrivateLink"
    Description: Key to find object in the bucket
    Type: String
  BucketObject:
    Default: "Data.json"
    Description: "File to store data in the bucket"
    Type: String
  EnvironmentName:
    AllowedValues: [ "dev", "test", "prod" ]
    ConstraintDescription: "Must specify dev, test or prod"
    Default: "dev"
    Description: "Environment name that prefix all resources"
    Type: String    
  ProjectName:
    Default: "ANS"
    Description: "Project name that prefix all resources"
    Type: String
  SaveInS3File:
    AllowedValues: [ "false", "true" ]
    Default: "false"
    Description: "Save resources information in s3 file"
    Type: String

  # Stack parameters
  BastionInstanceIngressCidrIp:
    Type: String
    Default: "0.0.0.0/0"
  BastionInstanceVpcId:
    Type: String
  ConsumerIngressCidrIp:
    Type: String
  ConsumerVPCId:
    Type: String
  WebServerVPCId:
    Type: String
  PrefixListEntries:
    Type: String

Conditions:
  saveInS3File: !Equals [ !Ref SaveInS3File, "true"]

Resources:
  PrefixList:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/Generic/VPC/ManagedPrefixList.yaml"
      TimeoutInMinutes: 5
      Parameters:
        Bucket: !Ref Bucket
        BucketKey: !Ref BucketKey
        BucketObject: !Ref BucketObject
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        SaveInS3File: !Ref SaveInS3File
        PrefixListName: "All-VPC-pl"
        PrefixListEntries: !Ref PrefixListEntries

  BastionInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security Group for Bastion"
      GroupName: "BastionInstanceSecurityGroup"
      SecurityGroupIngress:
        - CidrIp: !Ref BastionInstanceIngressCidrIp
          FromPort: -1
          IpProtocol: icmp
          ToPort: -1
        - CidrIp: !Ref BastionInstanceIngressCidrIp
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      Tags:
        - Key: Name
          Value:  !Sub "${ProjectName}-${EnvironmentName}-Default-SG"
      VpcId: !Ref BastionInstanceVpcId

  BastionInstanceSecurityGroupToS3:
    Type: AWS::CloudFormation::CustomResource
    Condition: saveInS3File 
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      ServiceToken: !Join [ ":", [ "arn:aws:lambda", !Sub "${AWS::Region}", !Sub "${AWS::AccountId}", "function:EC2ResourceToS3"]]
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Ref BucketKey
      BucketObject: !Ref BucketObject
      Region: !Ref AWS::Region
      ResourceType: "SecurityGroup"
      Key: !Sub "${AWS::Region}:${ProjectName}:${EnvironmentName}:EC2:SecurityGroup:Bastion"
      Value: !Ref BastionInstanceSecurityGroup

  ConsumerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security Group for Consumer"
      GroupName: "ConsumerSecurityGroup"
      SecurityGroupIngress:
        - CidrIp: !Ref ConsumerIngressCidrIp
          FromPort: -1
          IpProtocol: icmp
          ToPort: -1
        - CidrIp: !Ref ConsumerIngressCidrIp
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      Tags:
        - Key: Name
          Value:  !Sub "${ProjectName}-${EnvironmentName}-Consumer-SG"
      VpcId: !Ref ConsumerVPCId

  ConsumerSecurityGroupToS3:
    Type: AWS::CloudFormation::CustomResource
    Condition: saveInS3File 
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      ServiceToken: !Join [ ":", [ "arn:aws:lambda", !Sub "${AWS::Region}", !Sub "${AWS::AccountId}", "function:EC2ResourceToS3"]]
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Ref BucketKey
      BucketObject: !Ref BucketObject
      Region: !Ref AWS::Region
      ResourceType: "SecurityGroup"
      Key: !Sub "${AWS::Region}:${ProjectName}:${EnvironmentName}:EC2:SecurityGroup:Consumer"
      Value: !Ref ConsumerSecurityGroup

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security group for WebServer"
      GroupName: "WebServerSecurityGroup"
      SecurityGroupIngress:
        - SourcePrefixListId: !GetAtt PrefixList.Outputs.PrefixListId
          FromPort: -1
          IpProtocol: icmp
          ToPort: -1
        - SourcePrefixListId: !GetAtt PrefixList.Outputs.PrefixListId
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - SourcePrefixListId: !GetAtt PrefixList.Outputs.PrefixListId
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${EnvironmentName}-WebServer-SG"
      VpcId: !Ref WebServerVPCId

  WebServerSecurityGroupToS3:
    Type: AWS::CloudFormation::CustomResource
    Condition: saveInS3File 
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      ServiceToken: !Join [ ":", [ "arn:aws:lambda", !Sub "${AWS::Region}", !Sub "${AWS::AccountId}", "function:EC2ResourceToS3"]]
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Ref BucketKey
      BucketObject: !Ref BucketObject
      Region: !Ref AWS::Region
      ResourceType: "SecurityGroup"
      Key: !Sub "${AWS::Region}:${ProjectName}:${EnvironmentName}:EC2:SecurityGroup:WebServer"
      Value: !Ref WebServerSecurityGroup

  VPCEndpointServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security group for VPC Endpoint"
      GroupName: "VPCEndpointServiceSecurityGroup"
      SecurityGroupIngress:
        - SourcePrefixListId: !GetAtt PrefixList.Outputs.PrefixListId
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      Tags:
        - Key: Name
          Value: !Sub "${ProjectName}-${EnvironmentName}-VPCEndpointService-SG"
      VpcId: !Ref ConsumerVPCId

  VPCEndpointServiceSecurityGroupToS3:
    Type: AWS::CloudFormation::CustomResource
    Condition: saveInS3File 
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      ServiceToken: !Join [ ":", [ "arn:aws:lambda", !Sub "${AWS::Region}", !Sub "${AWS::AccountId}", "function:EC2ResourceToS3"]]
      ServiceTimeout: 60
      Bucket: !Ref Bucket
      BucketKey: !Ref BucketKey
      BucketObject: !Ref BucketObject
      Region: !Ref AWS::Region
      ResourceType: "SecurityGroup"
      Key: !Sub "${AWS::Region}:${ProjectName}:${EnvironmentName}:EC2:SecurityGroup:VPCEndpointService"
      Value: !Ref VPCEndpointServiceSecurityGroup

Outputs:
  PrefixListId:
    Description: "Prefix List Id for all VPCs"
    Value: !Ref PrefixList
  BastionInstanceSecurityGroupId:
    Description: "Security GroupId for the Bastion"
    Value: !GetAtt BastionInstanceSecurityGroup.GroupId
  ConsumerSecurityGroupId:
    Description: "Security GroupId for the Consumer"
    Value: !GetAtt ConsumerSecurityGroup.GroupId
  WebServerSecurityGroupId:
    Description: "Security GroupId for the WebServer"
    Value: !GetAtt WebServerSecurityGroup.GroupId
  VpcEndpointServiceSecurityGroupId:
    Description: "Security GroupId for the VpcEndpointServiceSecurityGroup"
    Value: !GetAtt VPCEndpointServiceSecurityGroup.GroupId

  