# aws cloudformation validate-template --template-body file:/62_ROOT_VPCPrivateLink.yaml
# aws cloudformation create-stack --stack-name ANS-62 --template-body file:/62_ROOT_VPCPrivateLink.yaml --region eu-west-3 --capabilities CAPABILITY_IAM
# aws cloudformation delete-stack --stack-name ANS-62 --region eu-west-3
#
# 1 - SSH to the Bastion with your SSH key
# 2 - Copy your SSH key into the bastion and change rights 
# 3 - SSH to the Consumer with your SSH key
# 4 - Curl the DNS name of your VPC Endpoint to verify the connection to your WebServer
AWSTemplateFormatVersion: "2010-09-09"
Description: This template deploys a 2 VPC, Public and Private Subnets, Bastion, consumer and web servers, NLB and Private Link

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Project Configuration"
        Parameters:
          - ProjectName
          - EnvironmentName
      - Label:
          default: "VPC A configuration"
        Parameters:
          - VPCAName
          - VPCACidr
      - Label:
          default: "Subnets configuration"
        Parameters:
          - SubnetName
          - PrivateSubnetCidr
          - PublicSubnetCidr
      - Label:
          default: "VPC B configuration"
        Parameters:
          - VPCBName
          - VPCBCidr
      - Label:
          default: "Instances"
        Parameters:
          - InstanceImageId
          - WebServerInstanceImageId
          - InstanceKeyName
          - BastionInstanceName
          - BastionInstanceType
          - ConsumerInstanceName
          - ConsumerInstanceType
          - ApplicationInstanceName
          - ApplicationInstanceType
      - Label:
          default: "Configuration"
        Parameters:
          - Bucket
          - BucketKey

Parameters:
  # Global parameters
  EnvironmentName:
    Description: "Environment name that prefix all resources"
    Type: String
    Default: "dev"
    AllowedValues:
      - "dev"
      - "test"
      - "prod"
    ConstraintDescription: Must specify dev, test or prod
  ProjectName:
    Description: "Project name that prefix all resources"
    Type: String
    Default: "ANS"
  Bucket:
    Description: CloudFormation buket URL
    Type: String
    Default: "hawkfund-cloudformation"
  BucketKey:
    Description: Key to find object in the bucket
    Type: String
    Default: "62_VPCPrivateLink"

  # Network parameters
  VPCAName:
    Description: "VPC A name"
    Type: String
    Default: "Service Consumer VPC-A"
  VPCACidr:
    Description: "VPC A CIDR"
    Type: String
    Default: "10.10.0.0/16"
  VPCBName:
    Description: "VPC B name"
    Type: String
    Default: "Service Provider VPC-B"
  VPCBCidr:
    Description: "VPC B CIDR"
    Type: String
    Default: "10.20.0.0/16"
  PublicSubnetName:
    Description: "Public Subnet prefix name"
    Type: String
    Default: "PUB-Subnet"
  PrivateSubnetName:
    Description: "Private Subnet prefix name"
    Type: String
    Default: "PRI-Subnet"
  InternetGatewayName:
    Type: String
    Default: "Out"

  # Instances parameters
  InstanceImageId:
    Description: Instance AMI
    Type: AWS::EC2::Image::Id
    Default: ami-0d3f86bfba5ee6472
  WebServerInstanceImageId:
    Description: Instance AMI
    Type: AWS::EC2::Image::Id
    Default: ami-01dfa1f2708b3ec57
  InstanceKeyName: 
    Description: Instance Key name
    Type: String
    Default: "dso-paris"
  BastionInstanceName: 
    Description: "Bastion Instance name"
    Type: String
    Default: "Bastion"
  BastionInstanceType: 
    Description: "Bastion Instance type"
    Type: String
    Default: t2.micro
  ConsumerInstanceName: 
    Description: "Consumer Instance name"
    Type: String
    Default: "Consumer"
  ConsumerInstanceType: 
    Description: "Consumer Instance type"
    Type: String
    Default: t2.micro
  ApplicationInstanceName: 
    Description: "Application Instance name"
    Type: String
    Default: "WebService"
  ApplicationInstanceType: 
    Description: "Application Instance type"
    Type: String
    Default: t2.micro

Resources:
  VPCAndSubnetsA:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/62_20_VPCAndSubnets.yaml"                    
      TimeoutInMinutes: 5
      Parameters:
        Bucket: !Ref Bucket
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        FirstSubnetName: !Sub "${VPCAName}-${PublicSubnetName}-1"
        FirstSubnetPublic: false
        SecondSubnetName: !Sub "${VPCAName}-${PrivateSubnetName}-2"
        SecondSubnetPublic: true
        VPCCidr: !Ref VPCACidr
        VPCName: !Ref VPCAName
        
  VPCAndSubnetsB:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/62_20_VPCAndSubnets.yaml"
      TimeoutInMinutes: 5
      Parameters:
        Bucket: !Ref Bucket
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        FirstSubnetName: !Sub "${VPCBName}-${PrivateSubnetName}-1"
        FirstSubnetPublic: false
        SecondSubnetName: !Sub "${VPCBName}-${PrivateSubnetName}-2"
        SecondSubnetPublic: true
        VPCCidr: !Ref VPCBCidr
        VPCName: !Ref VPCBName

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/62_21_SecurityGroups.yaml"
      TimeoutInMinutes: 5
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        BastionCidrIp: "0.0.0.0/0"
        BastionVPCId: !GetAtt VPCAndSubnetsA.Outputs.VpcId
        ConsumerCidrIp: !GetAtt VPCAndSubnetsA.Outputs.FirstCidr
        ConsumerVPCId: !GetAtt VPCAndSubnetsA.Outputs.VpcId
        PrefixListEntries: !Join [",", [!Ref VPCACidr, "VPC-A", !Ref VPCBCidr, "VPC-B" ] ]
        WebServerVPCId: !GetAtt VPCAndSubnetsB.Outputs.VpcId

  InternetGateways:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/62_22_Gateways.yaml"
      TimeoutInMinutes: 5
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        InternetGatewayName:  !Ref InternetGatewayName
        VPCId: !GetAtt VPCAndSubnetsA.Outputs.VpcId

  RouteTables:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/62_23_RouteTables.yaml"
      TimeoutInMinutes: 5
      Parameters:
        Bucket: !Ref Bucket
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        VPCIds: !Join [ ",", [ !GetAtt VPCAndSubnetsA.Outputs.VpcId, !GetAtt VPCAndSubnetsB.Outputs.VpcId ] ]
        SubnetIds: !Join [ ",", [ !GetAtt VPCAndSubnetsA.Outputs.FirstSubnetId, !GetAtt VPCAndSubnetsA.Outputs.SecondSubnetId, !GetAtt VPCAndSubnetsB.Outputs.FirstSubnetId, !GetAtt VPCAndSubnetsB.Outputs.SecondSubnetId  ] ]
        RouteTableNames: "A,B"
        InternetGatewayId: !GetAtt InternetGateways.Outputs.InternetGatewayId
 
  Instances:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/62_30_Instances.yaml"
      TimeoutInMinutes: 5
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        KeyName: !Ref InstanceKeyName
        ImageIds: !Join [ ",", [ !Ref InstanceImageId, !Ref InstanceImageId, !Ref WebServerIn stanceImageId ] ]
        InstanceNames: !Join [ ",", [ !Ref BastionInstanceName, !Ref ConsumerInstanceName, ApplicationInstanceName ] ]
        InstanceTypes: !Join [ ",", [ !Ref BastionInstanceType, !Ref ConsumerInstanceType, !Ref ApplicationInstanceType ] ]
        SecurityGroups: !Join [ ",", [ !GetAtt SecurityGroups.Outputs.BastionSecurityGroupId, !GetAtt SecurityGroups.Outputs.ConsumerSecurityGroupId, !GetAtt SecurityGroups.Outputs.WebServerSecurityGroupId ] ]
        SubnetIds: !Join [ ",", [ !GetAtt VPCAndSubnetsA.Outputs.FirstSubnetId, !GetAtt VPCAndSubnetsA.Outputs.SecondSubnetId, !GetAtt VPCAndSubnetsB.Outputs.SecondSubnetId  ] ]
        
  LoadBalancers:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/62_40_LoadBalancers.yaml"
      TimeoutInMinutes: 5
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        NLBName: !Sub "${ApplicationInstanceName}"
        NLBSourceCidr: !GetAtt VPCAndSubnetsA.Outputs.SecondCidr
        NLBSubnetId: !GetAtt VPCAndSubnetsB.Outputs.FirstSubnetId
        NLBTargetIds: !Join [ ",", [ !GetAtt Instances.Outputs.ApplicationInstance1Id, !GetAtt Instances.Outputs.ApplicationInstance2Id ] ]
        VPCId: !GetAtt VPCAndSubnetsB.Outputs.VpcId

  VPCEndpoints:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/62_70_Endpoints.yaml"
      TimeoutInMinutes: 5
      Parameters:
        NetworkLoadBalancerArn: !GetAtt LoadBalancers.Outputs.NetworkLoadBalancerId
        VpcEpSubnetId: !GetAtt VPCAndSubnetsA.Outputs.SecondSubnetId
        VpcEpVpcId: !GetAtt VPCAndSubnetsA.Outputs.VpcId
        VpcEpSecurityGroup: !GetAtt SecurityGroups.Outputs.VpcEndpointServiceSecurityGroupId 