---
AWSTemplateFormatVersion: "2010-09-09"
Description: This template create bastion and application Instances and Security Groups

Parameters:
  # Global parameters
  EnvironmentName:
    Description: "Environment name that prefix all resources"
    Type: String
    Default: "dev"
    AllowedValues:
      - "dev"
      - "test"
      - "prod"
    ConstraintDescription: Must specify dev, test or prod
  ProjectName:
    Description: "Project name that prefix all resources"
    Type: String
    Default: "ANS"
  Bucket:
    Description: CloudFormation buket URL
    Type: String
    Default: "hawkfund-cloudformation"

  # Stack parameters
  ImageIds:
    Description: "Instance AMI"
    Type: String
  KeyName:
    Description: "Instances Key name"
    Type: String
  InstanceNames:
    Description: "Instances name"
    Type: String
  InstanceTypes:
    Description: "Instances type"
    Type: String
  SubnetIds:
    Type: String
  SecurityGroups:
    Type: String

Resources:
  BastionInstance:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/Generic/EC2/Instances.yaml"
      TimeoutInMinutes: 5
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        AvailabilityZone: !Select [0, !GetAZs ]
        KeyName: !Ref KeyName
        ImageId: !Select [0, !Split [",", !Ref ImageIds]]
        InstanceName: !Select [0, !Split [",", !Ref InstanceNames]]
        InstanceType: !Select [0, !Split [",", !Ref InstanceTypes]]
        SecurityGroup: !Select [0, !Split [",", !Ref SecurityGroups]]
        SubnetId: !Select [0, !Split [",", !Ref SubnetIds]]

  ConsumerInstance:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/Generic/EC2/Instances.yaml"
      TimeoutInMinutes: 5
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        AvailabilityZone: !Select [0, !GetAZs ]
        KeyName: !Ref KeyName
        ImageId: !Select [1, !Split [",", !Ref ImageIds]]
        InstanceName: !Select [1, !Split [",", !Ref InstanceNames]]
        InstanceType: !Select [1, !Split [",", !Ref InstanceTypes]]
        SecurityGroup: !Select [1, !Split [",", !Ref SecurityGroups]]
        SubnetId: !Select [1, !Split [",", !Ref SubnetIds]]

  ApplicationInstance1:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/Generic/EC2/Instances.yaml"
      TimeoutInMinutes: 5
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        AvailabilityZone: !Select [0, !GetAZs ]
        KeyName: !Ref KeyName
        ImageId: !Select [2, !Split [",", !Ref ImageIds]]
        InstanceName:
          !Join ["", [!Select [2, !Split [",", !Ref InstanceNames]], "-1"]]
        InstanceType: !Select [2, !Split [",", !Ref InstanceTypes]]
        SecurityGroup: !Select [2, !Split [",", !Ref SecurityGroups]]
        SubnetId: !Select [2, !Split [",", !Ref SubnetIds]]

  ApplicationInstance2:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/Generic/EC2/Instances.yaml"
      TimeoutInMinutes: 5
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        AvailabilityZone: !Select [0, !GetAZs ]
        KeyName: !Ref KeyName
        ImageId: !Select [2, !Split [",", !Ref ImageIds]]
        InstanceName:
          !Join ["", [!Select [2, !Split [",", !Ref InstanceNames]], "-2"]]
        InstanceType: !Select [2, !Split [",", !Ref InstanceTypes]]
        SecurityGroup: !Select [2, !Split [",", !Ref SecurityGroups]]
        SubnetId: !Select [2, !Split [",", !Ref SubnetIds]]
           
  BastionInstanceEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !GetAtt BastionInstance.Outputs.InstanceId


Outputs:
  BastionInstancesId:
    Description: "Id of the Bastion Instance"
    Value: !GetAtt BastionInstance.Outputs.InstanceId
  BastionPrivateIP:
    Description: "Private IP of the Bastion Instance"
    Value: !GetAtt BastionInstance.Outputs.InstancePrivateIP
  BastionPublicIP:
    Description: "Public IP of the Bastion Instance"
    Value: !Ref BastionInstanceEIP
  ConsumerInstancesId:
    Description: "Id of the Consumer Instance"
    Value: !GetAtt ConsumerInstance.Outputs.InstanceId
  ConsumerPrivateIP:
    Description: "Private IP of the Consumer Instance"
    Value: !GetAtt ConsumerInstance.Outputs.InstancePrivateIP
  ApplicationInstance1Id:
    Description: "Id of the Application Instance 1"
    Value: !GetAtt ApplicationInstance1.Outputs.InstanceId
  ApplicationInstance1PrivateIP:
    Description: "Private IP of the Application Instance 1"
    Value: !GetAtt ApplicationInstance1.Outputs.InstancePrivateIP
  ApplicationInstance2Id:
    Description: "Id of the Application Instance 2"
    Value: !GetAtt ApplicationInstance2.Outputs.InstanceId
  ApplicationInstance2PrivateIP:
    Description: "Private IP of the Application Instance 2"
    Value: !GetAtt ApplicationInstance2.Outputs.InstancePrivateIP
