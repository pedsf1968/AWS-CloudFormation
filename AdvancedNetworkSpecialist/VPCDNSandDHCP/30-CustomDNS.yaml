---
# aws cloudformation validate-template --template-body file://30-CustomDNS.yaml
# aws cloudformation create-stack --stack-name ANS-30 --template-body file://30-CustomDNS.yaml
# aws cloudformation delete-stack --stack-name ANS-30

AWSTemplateFormatVersion: "2010-09-09"
Description:  This template deploys a VPC, Public and Private Subnets, Internet Gateway, Route Table, Custom DNS and Instances


Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "VPC configuration"
        Parameters:
          - VPCName
          - VPCCidr
      - Label:
          default: "Subnet configuration"
        Parameters:
          - PublicSubnetName
          - PublicSubnetCidr
          - PrivateSubnetName
          - PrivateSubnetCidr
      - Label:
          default: "Gateways and Routes"
        Parameters:
          - InternetGatewayName
          - DefaultRouteTableName
          - PublicRouteTableName
          - PrivateRouteTableName
      - Label:
          default: "Instance configuration"
        Parameters:
          - AppInstanceName
          - DBInstanceName
          - DNSInstanceName
          - InstanceImageId
          - KeyName
        
Parameters:
  VPCName:
    Description: VPC name
    Type: String
    Default: "My-VPC"
  VPCCidr:
    Description: VPC CIDR
    Type: String
    Default: 10.10.0.0/16
  PublicSubnetName:
    Description: App Subnet name
    Type: String
    Default: "App-Subnet"
  PublicSubnetCidr:
    Description: App Subnet CIDR
    Type: String
    Default: 10.10.0.0/24
  PrivateSubnetName:
    Description: DB Subnet name
    Type: String
    Default: "DB-Subnet"
  PrivateSubnetCidr:
    Description: DB Subnet CIDR
    Type: String
    Default: 10.10.1.0/24
    
  InternetGatewayName:
    Description: Internet Gateway name
    Type: String
    Default: "VPC-IGW"
  DefaultRouteTableName:
    Description: Default Route Table name
    Type: String
    Default: "VPC-RT"
  PublicRouteTableName:
    Description: Public Route Table name
    Type: String
    Default: "PublicSubnet-RT"
  PrivateRouteTableName:
    Description: DB Route Table name
    Type: String
    Default: "PrivateSubnet-RT"

  DNSInstanceName:
    Description: The DNS Instance name in Public Subnet
    Type: String
    Default: "DNS"
  AppInstanceName:
    Description: The App Instance name in Public Subnet
    Type: String
    Default: "APP-Instance"
  DBInstanceName:
    Description: The DB Instance name in Private Subnet
    Type: String
    Default: "DB-Instance"
  InstanceImageId:
    Description: The AMI number
    Type: AWS::EC2::Image::Id
    Default: ami-0997c2f07703b91fb
  KeyName:
    Description: The EC2 Key name
    Type: String
    Default: "dso-paris"

Resources:
  # VPC, DHCPOptions, Association and App and DB Subnets
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      Tags:
        - Key: Name
          Value: !Ref VPCName

  DhcpOptions: 
    Type: AWS::EC2::DHCPOptions
    Properties: 
        DomainName: corp.internal
        DomainNameServers: 
          - AmazonProvidedDNS
        Tags: 
        - Key: Name
          Value: "corp.internal-DHCPOption"

  VPCDHCPOptionsAssociation:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      VpcId:
        Ref: VPC
      DhcpOptionsId:
        Ref: DhcpOptions          

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: !Ref PublicSubnetCidr
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Ref PublicSubnetName
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: !Ref PrivateSubnetCidr
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Ref PrivateSubnetName

  # Internet Gateway and Attachment
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref InternetGatewayName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  # Route, Route Table and Associations
  DefaultRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref DefaultRouteTableName
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref PublicRouteTableName
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref PrivateRouteTableName

  DefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet
  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet

  # Instances and Security Groups
  DNSInstance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:  !Select [ 0, !GetAZs ]
      ImageId: !Ref InstanceImageId
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref SSHSecurityGroup
        - !Ref ICMPSecurityGroup
        - !Ref DNSSecurityGroup
      SourceDestCheck: False
      SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: !Ref DNSInstanceName
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install bind bind-utils â€“y                   
  AppInstance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:  !Select [ 0, !GetAZs ]
      ImageId: !Ref InstanceImageId
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref SSHSecurityGroup
        - !Ref ICMPSecurityGroup
      SourceDestCheck: False
      SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: !Ref AppInstanceName
  DBInstance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:  !Select [ 0, !GetAZs ]
      ImageId: !Ref InstanceImageId
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref SSHSecurityGroup
        - !Ref ICMPSecurityGroup
      SubnetId: !Ref PrivateSubnet
      Tags:
        - Key: Name
          Value: !Ref DBInstanceName

  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: SSH-SG

  ICMPSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable Ping
      SecurityGroupIngress:
      - CidrIp: !Ref VPCCidr
        FromPort: -1
        IpProtocol: icmp
        ToPort: -1
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: ICMP-SG

  DNSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable DNS
      SecurityGroupIngress:
      - CidrIp: !Ref VPCCidr
        FromPort: 53
        IpProtocol: UDP
        ToPort: 53
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: DNS-SG

Outputs:
  VpcId:
    Description: Id of the VPC
    Value: !Ref VPC
  PublicSubnetId:
    Description: Id of the App Subnet
    Value: !Ref PublicSubnet
  PrivateSubnetId:
    Description: Id of the DB Subnet
    Value: !Ref PrivateSubnet
  InternetGatewayId:
    Description: Id of the Internet Gateway
    Value: !Ref InternetGateway
  InternetGatewayAttachmentId:
    Description: Id of the Internet Gateway Attachment
    Value: !Ref InternetGatewayAttachment
  DefaultRouteId:
    Description: Id of the default Route Table
    Value: !Ref DefaultRoute
  PublicRouteTableId:
    Description: Id of the App Route Table
    Value: !Ref PublicRouteTable
  PrivateRouteTableId:
    Description: Id of the DB Route Table
    Value: !Ref PrivateRouteTable
  PublicSubnetRouteTableAssociationId:
    Description: Id of the App Subnet Route Table Association
    Value: !Ref PublicSubnetRouteTableAssociation
  PrivateSubnetRouteTableAssociationId:
    Description: Id of the DB Subnet Route Table Association
    Value: !Ref PrivateSubnetRouteTableAssociation
  SSHSecurityGroupId:
    Description: Id of the SSH Security Group
    Value: !Ref SSHSecurityGroup

  DNSInstanceId:
    Description: Id of the DNS Instance 
    Value: !Ref DNSInstance
  DNSInstancePrivateIP:
    Description: Private IP v4 of the DNS Instance 
    Value: !GetAtt DNSInstance.PrivateIp
  DNSInstancePublicIP:
    Description: Public IP v4 of the DNS Instance 
    Value: !GetAtt DNSInstance.PublicIp

  AppInstanceId:
    Description: Id of the App Instance 
    Value: !Ref AppInstance
  AppInstancePrivateIP:
    Description: Private IP v4 of the App Instance 
    Value: !GetAtt AppInstance.PrivateIp
  AppInstancePublicIP:
    Description: Public IP v4 of the App Instance 
    Value: !GetAtt AppInstance.PublicIp

  DBInstanceId:
    Description: Id of the DB Instance 
    Value: !Ref DBInstance
  DBInstanceDBIP:
    Description: Private IP v4 of the DB Instance 
    Value: !GetAtt DBInstance.PrivateIp
