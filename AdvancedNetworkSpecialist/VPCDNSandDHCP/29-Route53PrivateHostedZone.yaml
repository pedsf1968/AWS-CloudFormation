---
# aws cloudformation validate-template --template-body file:/29-Route53PrivateHostedZone.yaml
# aws cloudformation create-stack --stack-name ANS-29 --template-body file://29-Route53PrivateHostedZone.yaml
# aws cloudformation delete-stack --stack-name ANS-29

AWSTemplateFormatVersion: "2010-09-09"
Description:  This template deploys a VPC, Public and Private Subnets, Internet Gateway, Route Table and Instances


Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "VPC configuration"
        Parameters:
          - VPCName
          - VPCCidr
      - Label:
          default: "Subnet configuration"
        Parameters:
          - AppSubnetName
          - AppSubnetCidr
          - DBSubnetName
          - DBSubnetCidr
      - Label:
          default: "Gateways and Routes"
        Parameters:
          - InternetGatewayName
          - DefaultRouteTableName
          - AppRouteTableName
          - DBRouteTableName
      - Label:
          default: "Instance configuration"
        Parameters:
          - AppInstanceName
          - DBInstanceName
          - InstanceImageId
          - KeyName
        
Parameters:
  VPCName:
    Description: VPC name
    Type: String
    Default: "My-VPC"
  VPCCidr:
    Description: VPC CIDR
    Type: String
    Default: 10.10.0.0/16
  AppSubnetName:
    Description: App Subnet name
    Type: String
    Default: "App-Subnet"
  AppSubnetCidr:
    Description: App Subnet CIDR
    Type: String
    Default: 10.10.0.0/24
  DBSubnetName:
    Description: DB Subnet name
    Type: String
    Default: "DB-Subnet"
  DBSubnetCidr:
    Description: DB Subnet CIDR
    Type: String
    Default: 10.10.1.0/24
    
  InternetGatewayName:
    Description: Internet Gateway name
    Type: String
    Default: "VPC-IGW"
  DefaultRouteTableName:
    Description: Default Route Table name
    Type: String
    Default: "VPC-RT"
  AppRouteTableName:
    Description: App Route Table name
    Type: String
    Default: "AppSubnet-RT"
  DBRouteTableName:
    Description: DB Route Table name
    Type: String
    Default: "DBSubnet-RT"

  AppInstanceName:
    Description: The App Instance name in App Subnet
    Type: String
    Default: "App-Instance"
  DBInstanceName:
    Description: The Instance name in DB Subnet
    Type: String
    Default: "DB-Instance"
  InstanceImageId:
    Description: The AMI number
    Type: AWS::EC2::Image::Id
    Default: ami-0997c2f07703b91fb
  KeyName:
    Description: The EC2 Key name
    Type: String
    Default: "dso-paris"

Resources:
  # VPC, DHCPOptions, Association and App and DB Subnets
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      Tags:
        - Key: Name
          Value: !Ref VPCName

  DhcpOptions: 
    Type: AWS::EC2::DHCPOptions
    Properties: 
        DomainName: corp.internal
        DomainNameServers: 
          - AmazonProvidedDNS
        Tags: 
        - Key: Name
          Value: "corp.internal-DHCPOption"

  VPCDHCPOptionsAssociation:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      VpcId:
        Ref: VPC
      DhcpOptionsId:
        Ref: DhcpOptions          

  AppSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: !Ref AppSubnetCidr
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Ref AppSubnetName
  DBSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: !Ref DBSubnetCidr
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Ref DBSubnetName

  # Hosted Zone and DNS Records
  HostedZone: 
    Type: "AWS::Route53::HostedZone"
    Properties: 
      HostedZoneConfig: 
        Comment: "My hosted zone for corp.internal"
      Name: "corp.internal"
      VPCs: 
        - 
          VPCId: !Ref VPC
          VPCRegion: !Ref AWS::Region

  AppDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId : !Ref HostedZone
      Name: app.corp.internal
      ResourceRecords:
      - !GetAtt AppInstance.PrivateIp
      TTL: 900
      Type: A

  DBDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId : !Ref HostedZone
      Name: db.corp.internal
      ResourceRecords:
      - !GetAtt DBInstance.PrivateIp
      TTL: 900
      Type: A

  # Internet Gateway and Attachment
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref InternetGatewayName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  # Route, Route Table and Associations
  DefaultRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref DefaultRouteTableName
  AppRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref AppRouteTableName
  DBRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Ref DBRouteTableName

  DefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref AppRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  AppSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref AppRouteTable
      SubnetId: !Ref AppSubnet
  DBSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref DBRouteTable
      SubnetId: !Ref DBSubnet

  # Instances and Security Groups
  AppInstance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:  !Select [ 0, !GetAZs ]
      ImageId: !Ref InstanceImageId
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref SSHSecurityGroup
        - !Ref ICMPSecurityGroup
      SourceDestCheck: False
      SubnetId: !Ref AppSubnet
      Tags:
        - Key: Name
          Value: !Ref AppInstanceName
  DBInstance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:  !Select [ 0, !GetAZs ]
      ImageId: !Ref InstanceImageId
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref SSHSecurityGroup
        - !Ref ICMPSecurityGroup
        - !Ref HTTPSecurityGroup
        - !Ref HTTPSSecurityGroup
      SubnetId: !Ref DBSubnet
      Tags:
        - Key: Name
          Value: !Ref DBInstanceName

  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        FromPort: 22
        IpProtocol: tcp
        ToPort: 22
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: SSH-SG

  HTTPSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP
      SecurityGroupIngress:
      - CidrIp: !Ref VPCCidr
        FromPort: 80
        IpProtocol: tcp
        ToPort: 80
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: HTTP-SG

  HTTPSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP
      SecurityGroupIngress:
      - CidrIp: !Ref VPCCidr
        FromPort: 443
        IpProtocol: tcp
        ToPort: 443
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: HTTPS-SG

  ICMPSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable Ping
      SecurityGroupIngress:
      - CidrIp: !Ref VPCCidr
        FromPort: -1
        IpProtocol: icmp
        ToPort: -1
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: ICMP-SG

Outputs:
  VpcId:
    Description: Id of the VPC
    Value: !Ref VPC
  AppSubnetId:
    Description: Id of the App Subnet
    Value: !Ref AppSubnet
  DBSubnetId:
    Description: Id of the DB Subnet
    Value: !Ref DBSubnet
  InternetGatewayId:
    Description: Id of the Internet Gateway
    Value: !Ref InternetGateway
  InternetGatewayAttachmentId:
    Description: Id of the Internet Gateway Attachment
    Value: !Ref InternetGatewayAttachment
  DefaultRouteId:
    Description: Id of the default Route Table
    Value: !Ref DefaultRoute
  AppRouteTableId:
    Description: Id of the App Route Table
    Value: !Ref AppRouteTable
  DBRouteTableId:
    Description: Id of the DB Route Table
    Value: !Ref DBRouteTable
  AppSubnetRouteTableAssociationId:
    Description: Id of the App Subnet Route Table Association
    Value: !Ref AppSubnetRouteTableAssociation
  DBSubnetRouteTableAssociationId:
    Description: Id of the DB Subnet Route Table Association
    Value: !Ref DBSubnetRouteTableAssociation
  SSHSecurityGroupId:
    Description: Id of the SSH Security Group
    Value: !Ref SSHSecurityGroup

  AppInstanceId:
    Description: Id of the App Instance 
    Value: !Ref AppInstance
  AppInstancePrivateIP:
    Description: Private IP v4 of the App Instance 
    Value: !GetAtt AppInstance.PrivateIp
  AppInstancePublicIP:
    Description: Public IP v4 of the App Instance 
    Value: !GetAtt AppInstance.PublicIp

  DBInstanceId:
    Description: Id of the DB Instance 
    Value: !Ref DBInstance
  DBInstanceDBIP:
    Description: Private IP v4 of the DB Instance 
    Value: !GetAtt DBInstance.PrivateIp
