---
AWSTemplateFormatVersion: "2010-09-09"
Description: This template create bastion and application Instances and Security Groups

Parameters:
  # Global parameters
  Bucket:
    Description: "CloudFormation bucket URL"
    Type: String
    Default: "hawkfund-cloudformation"
  EnvironmentName:
    Description: "Environment name that prefix all resources"
    Type: String
    Default: "dev"
    AllowedValues:
      - "dev"
      - "test"
      - "prod"
    ConstraintDescription: Must specify dev, test or prod
  ProjectName:
    Description: "Project name that prefix all resources"
    Type: String
    Default: "ANS"

  # Stack parameters
  ApplicationAvailabilityZones:
    Description: "AZ of the Instances"
    Type: String
  ApplicationImageId:
    Description: "Application Instance AMI"
    Type: String
  ApplicationInstanceName:
    Description: "Application Instance name"
    Type: String
  ApplicationInstanceType:
    Description: "Application Instances type"
    Type: String
  ApplicationSubnetIds:
    Description: "Application Subnet IDs"
    Type: String
  ApplicationSecurityGroups:
    Description: "Application Security Groups"
    Type: String
  BastionAvailabilityZone:
    Description: "AZ of the Bastion"
    Type: String
  BastionImageId:
    Description: "Bastion Instance AMI"
    Type: String
  BastionInstanceName:
    Description: "Bastion Instance name"
    Type: String
  BastionInstanceType:
    Description: "Bastion Instance type"
    Type: String
  BastionSecurityGroup:
    Description: "Bastion Security Group"
    Type: String
  BastionSubnetId:
    Description: "Bastion Subnet ID"
    Type: String
  KeyName:
    Description: "Instances Key name"
    Type: String

Resources:
  BastionInstance:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/Generic/EC2/Instances.yaml"
      TimeoutInMinutes: 5
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        AvailabilityZone: !Ref BastionAvailabilityZone
        KeyName: !Ref KeyName
        ImageId: !Ref BastionImageId
        InstanceName: !Ref BastionInstanceName
        InstanceType: !Ref BastionInstanceType
        SecurityGroup: !Ref BastionSecurityGroup
        SubnetId: !Ref BastionSubnetId

  ApplicationAInstance:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/Generic/EC2/Instances.yaml"
      TimeoutInMinutes: 5
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        AvailabilityZone: !Select [0, !Split [",", !Ref ApplicationAvailabilityZones ] ]
        KeyName: !Ref KeyName
        ImageId: !Ref ApplicationImageId
        InstanceName: !Sub "${ApplicationInstanceName}-A"
        InstanceType: !Ref ApplicationInstanceType
        SecurityGroup: !Select [0, !Split [",", !Ref ApplicationSecurityGroups]]
        SubnetId: !Select [0, !Split [",", !Ref ApplicationSubnetIds]]

  ApplicationBInstance:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/Generic/EC2/Instances.yaml"
      TimeoutInMinutes: 5
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        AvailabilityZone: !Select [1, !Split [",", !Ref ApplicationAvailabilityZones ] ]
        KeyName: !Ref KeyName
        ImageId: !Ref ApplicationImageId
        InstanceName: !Sub "${ApplicationInstanceName}-B"
        InstanceType: !Ref ApplicationInstanceType
        SecurityGroup: !Select [1, !Split [",", !Ref ApplicationSecurityGroups]]
        SubnetId: !Select [1, !Split [",", !Ref ApplicationSubnetIds]]

  ApplicationCInstance:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/Generic/EC2/Instances.yaml"
      TimeoutInMinutes: 5
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        AvailabilityZone: !Select [2, !Split [",", !Ref ApplicationAvailabilityZones ] ]
        KeyName: !Ref KeyName
        ImageId: !Ref ApplicationImageId
        InstanceName: !Sub "${ApplicationInstanceName}-C"
        InstanceType: !Ref ApplicationInstanceType
        SecurityGroup: !Select [2, !Split [",", !Ref ApplicationSecurityGroups]]
        SubnetId: !Select [2, !Split [",", !Ref ApplicationSubnetIds]]

  BastionInstanceEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !GetAtt BastionInstance.Outputs.InstanceId


Outputs:
  BastionInstancesId:
    Description: "Id of the Bastion Instance"
    Value: !GetAtt BastionInstance.Outputs.InstanceId
  BastionPrivateIP:
    Description: "Private IP of the Bastion Instance"
    Value: !GetAtt BastionInstance.Outputs.InstancePrivateIP
  BastionPublicIP:
    Description: "Public IP of the Bastion Instance"
    Value: !Ref BastionInstanceEIP
  ApplicationAInstanceId:
    Description: "Id of the Application A Instance"
    Value: !GetAtt ApplicationAInstance.Outputs.InstanceId
  ApplicationAPrivateIP:
    Description: "Private IP of the Application A Instance"
    Value: !GetAtt ApplicationAInstance.Outputs.InstancePrivateIP
  ApplicationBInstanceId:
    Description: "Id of the Application B Instance"
    Value: !GetAtt ApplicationBInstance.Outputs.InstanceId
  ApplicationBPrivateIP:
    Description: "Private IP of the Application B Instance"
    Value: !GetAtt ApplicationBInstance.Outputs.InstancePrivateIP
  ApplicationCInstanceId:
    Description: "Id of the Application C Instance"
    Value: !GetAtt ApplicationCInstance.Outputs.InstanceId
  ApplicationCPrivateIP:
    Description: "Private IP of the Application C Instance"
    Value: !GetAtt ApplicationCInstance.Outputs.InstancePrivateIP
