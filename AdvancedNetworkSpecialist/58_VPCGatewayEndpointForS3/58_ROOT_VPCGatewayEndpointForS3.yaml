# aws cloudformation validate-template --template-body file:/58_VPCGatewayEndPointForS3.yaml
# aws cloudformation create-stack --stack-name ANS-58 --template-body file:/58_ROOT_VPCGatewayEndpointForS3.yaml --region eu-west-3 --capabilities CAPABILITY_IAM
# aws cloudformation delete-stack --stack-name ANS-58 --region eu-west-3

# 1 - ssh on bastion: ssh -i "my-key.pem" ec2-user@13.36.247.89
# 2 - Copy key on bastion: vim my-key.pem
# 3 - Change key attribute: chmod 400 my-key.pem
# 4 - ssh on application: : ssh -i "my-key.pem" ec2-user@10.10.1.217
# 5 - Create file: ls /etc > test.txt
# 6 - Copy file to bucket: aws s3 cp test.txt s3://${Bucket}/${BucketKey}/ 
AWSTemplateFormatVersion: "2010-09-09"
Description: This template deploys a VPC, Public and Private Subnets, Bastion, application server and Gateway Endpoint for s3

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Project Configuration"
        Parameters:
          - ProjectName
          - EnvironmentName
      - Label:
          default: "Configuration"
        Parameters:
          - Bucket
          - BucketKey
          - BucketObject
          - SaveInS3File
      - Label:
          default: "VPC configuration"
        Parameters:
          - VpcName
          - VpcCidrBlock
      - Label:
          default: "Subnets configuration"
        Parameters:
          - SubnetName
          - SubnetPrivateCidrBlock
          - SubnetPublicCidrBlock
      - Label:
          default: "IGW, Route Tables and Routes"
        Parameters:
          - InternetGatewayName
      - Label:
          default: "Instances"
        Parameters:
          - KeyName
          - ApplicationInstanceImageId
          - ApplicationInstanceName
          - ApplicationInstanceType
          - BastionInstanceImageId
          - BastionInstanceName
          - BastionInstanceType

Parameters:
  # Global parameters
  Bucket:
    Default: "hawkfund-cloudformation"
    Description: CloudFormation buket URL
    Type: String
  BucketKey:
    Default: "58_VPCGatewayEndpointForS3"
    Description: Key to find object in the bucket
    Type: String
  BucketObject:
    Default: "Data.json"
    Description: "File to store data in the bucket"
    Type: String
  EnvironmentName:
    AllowedValues: ["dev", "test", "staging", "prod"]
    ConstraintDescription: "Must specify dev, test or prod"
    Default: "dev"
    Description: "Environment name that prefix all resources"
    Type: String    
  ProjectName:
    Default: "ANS"
    Description: "Project name that prefix all resources"
    Type: String
  SaveInS3File:
    AllowedValues: [ "false", "true" ]
    Default: "true"
    Description: "Save resources information in s3 file"
    Type: String

  # Network parameters
  InternetGatewayName:
    Default: "VPC-IGW"
    Type: String

  SubnetName:
    Default: "Subnet"
    Description: Subnet name
    Type: String
  SubnetPrivateCidrBlock:
    Default: 10.10.1.0/24
    Description: "Private Subnet CIDR"
    Type: String
  SubnetPublicCidrBlock:
    Default: 10.10.0.0/24
    Description: "Public Subnet CIDR"
    Type: String

  VpcName:
    Default: "My-VPC"
    Description: VPC name
    Type: String
  VpcCidrBlock:
    Default: 10.10.0.0/16
    Description: "The IPv4 network range for the VPC, in CIDR notation."
    Type: String

  # Instances parameters
  ApplicationInstanceImageId:
    Default: ami-08461dc8cd9e834e0
    Description: "Application Instance AMI"
    Type: AWS::EC2::Image::Id
  ApplicationInstanceName:
    Default: "Application"
    Description: "Application Instances name"
    Type: String
  ApplicationInstanceType:
    Default: t2.micro
    Description: "Application Instances type"
    Type: String
  BastionInstanceImageId:
    Default: ami-08461dc8cd9e834e0
    Description: "Bastion Instance AMI"
    Type: AWS::EC2::Image::Id
  BastionInstanceName:
    Default: "Bastion"
    Description: "Bastion Instances name"
    Type: String
  BastionInstanceType:
    Default: t2.micro
    Description: "Bastion Instances type"
    Type: String
  KeyName:
    Default: "dso-paris"
    Description: "Instances Key name"
    Type: String

Resources:
  Lambdas:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/58_Lambdas.yaml"
      TimeoutInMinutes: 5
      Parameters:
        Bucket: !Ref Bucket
        BucketKey: !Ref BucketKey
        BucketObject: !Ref BucketObject
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        SaveInS3File: !Ref SaveInS3File
        ApplicationLogLevel: DEBUG

  Roles:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    DependsOn:
      - Lambdas
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/58_Roles.yaml"
      TimeoutInMinutes: 5
      Parameters:
        Bucket: !Ref Bucket
        BucketKey: !Ref BucketKey
        BucketObject: !Ref BucketObject
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        SaveInS3File: !Ref SaveInS3File

  VpcAndSubnets:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    DependsOn:
      - Roles
      - Lambdas
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/58_VpcAndSubnets.yaml"
      TimeoutInMinutes: 5
      Parameters:
        Bucket: !Ref Bucket
        BucketKey: !Ref BucketKey
        BucketObject: !Ref BucketObject
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        SaveInS3File: !Ref SaveInS3File
        SubnetPrivateCidrBlock: !Ref SubnetPrivateCidrBlock
        SubnetPublicCidrBlock: !Ref SubnetPublicCidrBlock
        SubnetName: !Ref SubnetName
        VpcCidrBlock: !Ref VpcCidrBlock
        VpcName: !Ref VpcName
        
# Create Internet Gateway and default route table for public subnet
  Gateways:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    DependsOn:
      - Roles
      - Lambdas
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/58_Gateways.yaml"
      TimeoutInMinutes: 5
      Parameters:
        Bucket: !Ref Bucket
        BucketKey: !Ref BucketKey
        BucketObject: !Ref BucketObject
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        SaveInS3File: !Ref SaveInS3File
        IgwName: !Ref InternetGatewayName
        VpcId: !GetAtt VpcAndSubnets.Outputs.VpcId

  RouteTables:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    DependsOn:
      - Roles
      - Lambdas
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/58_RouteTables.yaml"
      TimeoutInMinutes: 5
      Parameters:
        Bucket: !Ref Bucket
        BucketKey: !Ref BucketKey
        BucketObject: !Ref BucketObject
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        SaveInS3File: !Ref SaveInS3File
        RouteTableNames: "A,B"
        InternetGatewayId: !GetAtt Gateways.Outputs.InternetGatewayId
        SubnetPrivateId: !GetAtt VpcAndSubnets.Outputs.SubnetPrivateId
        SubnetPublicId: !GetAtt VpcAndSubnets.Outputs.SubnetPublicId
        VpcId: !GetAtt VpcAndSubnets.Outputs.VpcId

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    DependsOn:
      - Roles
      - Lambdas
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/58_SecurityGroups.yaml"
      TimeoutInMinutes: 5
      Parameters:
        Bucket: !Ref Bucket
        BucketKey: !Ref BucketKey
        BucketObject: !Ref BucketObject
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        SaveInS3File: !Ref SaveInS3File
        ApplicationInstanceIngressCidrIp: "10.0.0.0/8"
        ApplicationInstanceVpcId: !GetAtt VpcAndSubnets.Outputs.VpcId
        EndpointIngressCidrIp: "10.0.0.0/8"
        EndpointVpcId: !GetAtt VpcAndSubnets.Outputs.VpcId
        BastionInstanceIngressCidrIp: "0.0.0.0/0"
        BastionInstanceVpcId: !GetAtt VpcAndSubnets.Outputs.VpcId

  Endpoints:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    DependsOn:
      - Roles
      - Lambdas
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/58_Endpoints.yaml"
      TimeoutInMinutes: 5
      Parameters:
        Bucket: !Ref Bucket
        BucketKey: !Ref BucketKey
        BucketObject: !Ref BucketObject
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        SaveInS3File: !Ref SaveInS3File
        RouteTableId: !GetAtt RouteTables.Outputs.SubnetPrivateRouteTableId
        SecurityGroupId: !GetAtt SecurityGroups.Outputs.EndpointSecurityGroupId
        SubnetId: !GetAtt VpcAndSubnets.Outputs.SubnetPrivateId
        VpcId: !GetAtt VpcAndSubnets.Outputs.VpcId

  Instances:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    DependsOn:
      - Lambdas
      - Gateways
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/58_Instances.yaml"
      TimeoutInMinutes: 5
      Parameters:
        Bucket: !Ref Bucket
        BucketKey: !Ref BucketKey
        BucketObject: !Ref BucketObject
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        SaveInS3File: !Ref SaveInS3File
        ApplicationInstanceImageId: !Ref ApplicationInstanceImageId
        ApplicationInstanceName: !Ref ApplicationInstanceName
        ApplicationInstanceProfile: !GetAtt Roles.Outputs.InstanceProfileId
        ApplicationInstanceType: !Ref ApplicationInstanceType
        ApplicationInstanceSecurityGroup: !GetAtt SecurityGroups.Outputs.ApplicationInstanceSecurityGroupId
        ApplicationInstanceSubnetId: !GetAtt VpcAndSubnets.Outputs.SubnetPrivateId
        BastionInstanceImageId: !Ref BastionInstanceImageId
        BastionInstanceName: !Ref BastionInstanceName
        BastionInstanceType: !Ref BastionInstanceType
        BastionInstanceSecurityGroup: !GetAtt SecurityGroups.Outputs.BastionInstanceSecurityGroupId
        BastionInstanceSubnetId: !GetAtt VpcAndSubnets.Outputs.SubnetPublicId
        KeyName: !Ref KeyName