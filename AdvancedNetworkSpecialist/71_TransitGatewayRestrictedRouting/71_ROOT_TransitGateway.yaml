# aws cloudformation validate-template --template-body file:/71_ROOT_TransitGateway.yaml
# aws cloudformation create-stack --stack-name ANS-71 --template-body file:/71_ROOT_TransitGateway.yaml --region eu-west-3 --capabilities CAPABILITY_IAM
# aws cloudformation delete-stack --stack-name ANS-71 --region eu-west-3
#
AWSTemplateFormatVersion: "2010-09-09"
Description: This template deploys a 3 VPC and Transit Gateway with no route between A to C

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Project Configuration"
        Parameters:
          - ProjectName
          - EnvironmentName
      - Label:
          default: "VPC configuration"
        Parameters:
          - VpcNames
          - VpcCidrBlocks
      - Label:
          default: "Subnets configuration"
        Parameters:
          - SubnetName
          - PrivateSubnetCidr
          - PublicSubnetCidr
      - Label:
          default: "Instances"
        Parameters:
          - ApplicationImageId
          - ApplicationInstanceName
          - ApplicationInstanceType
          - BastionImageId
          - BastionInstanceName
          - BastionInstanceType
          - InstanceKeyName
      - Label:
          default: "Configuration"
        Parameters:
          - Bucket
          - BucketKey

Parameters:
  # Global parameters
  EnvironmentName:
    Description: "Environment name that prefix all resources"
    Type: String
    Default: "dev"
    AllowedValues:
      - "dev"
      - "test"
      - "prod"
    ConstraintDescription: Must specify dev, test or prod
  ProjectName:
    Description: "Project name that prefix all resources"
    Type: String
    Default: "ANS"
  Bucket:
    Description: CloudFormation buket URL
    Type: String
    Default: "hawkfund-cloudformation"
  BucketKey:
    Description: Key to find object in the bucket
    Type: String
    Default: "71_TransitGatewayRestrictedRouting"

  # Network parameters
  VpcNames:
    Description: "VPC names"
    Type: String
    Default: "A,B,C"
  VpcCidrBlocks:
    Description: "VPC CIDRs"
    Type: String
    Default: "10.0.0.0/16,10.1.0.0/16,10.2.0.0/16"

  # Instances parameters
  ApplicationImageId:
    Description: "AMI of the web server"
    Type: AWS::EC2::Image::Id
    Default: ami-01dfa1f2708b3ec57
  BastionImageId:
    Description: "Instance AMI"
    Type: AWS::EC2::Image::Id
    Default: ami-0d3f86bfba5ee6472
  InstanceKeyName: 
    Description: Instance Key name
    Type: String
    Default: "dso-paris"
  InstanceType: 
    Description: "Instance type"
    Type: String
    Default: t2.micro

Resources:
  VpcAndSubnetsA:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/71_20_VPCAndSubnets.yaml"                    
      TimeoutInMinutes: 5
      Parameters:
        Bucket: !Ref Bucket
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        AvailabilityZone: !Select [ 0, !GetAZs ]
        CreatePublicSubnet: "true"
        VpcCidrBlock: !Select [ 0, !Split [ ",", !Ref VpcCidrBlocks ] ]
        VpcName: !Select [ 0, !Split [ ",",!Ref VpcNames ] ]
        
  VpcAndSubnetsB:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/71_20_VPCAndSubnets.yaml"
      TimeoutInMinutes: 5
      Parameters:
        Bucket: !Ref Bucket
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        AvailabilityZone: !Select [ 1, !GetAZs ]
        VpcCidrBlock: !Select [ 1, !Split [ ",", !Ref VpcCidrBlocks ] ]
        VpcName: !Select [ 1, !Split [ ",",!Ref VpcNames ] ]

  VpcAndSubnetsC:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/71_20_VPCAndSubnets.yaml"
      TimeoutInMinutes: 5
      Parameters:
        Bucket: !Ref Bucket
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        AvailabilityZone: !Select [ 2, !GetAZs ]
        VpcCidrBlock: !Select [ 2, !Split [ ",", !Ref VpcCidrBlocks ] ]
        VpcName: !Select [ 2, !Split [ ",",!Ref VpcNames ] ]

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/71_21_SecurityGroups.yaml"
      TimeoutInMinutes: 5
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        BastionIngressCidrIp: "0.0.0.0/0"
        BastionVpcId: !GetAtt VpcAndSubnetsA.Outputs.VpcId
        ApplicationIngressCidrIps: "10.0.0.0/8,10.0.0.0/8,10.0.0.0/8"
        ApplicationVpcIds: !Join [ ",", [!GetAtt VpcAndSubnetsA.Outputs.VpcId, !GetAtt VpcAndSubnetsB.Outputs.VpcId, !GetAtt VpcAndSubnetsC.Outputs.VpcId]]

  Gateway:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/71_22_Gateways.yaml"
      TimeoutInMinutes: 5
      Parameters:
        Bucket: !Ref Bucket
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        IgwName: "Default"
        IgwVpcId: !GetAtt VpcAndSubnetsA.Outputs.VpcId
        TgwDefaultRouteTableAssociation: "disable"
        TgwDefaultRouteTablePropagation: "disable"
        TgwAmazonSideAsn: 65501
        TgwName: "Default"
        TgwSubnetIds: !Join [ ",", [!GetAtt VpcAndSubnetsA.Outputs.PrivateSubnetId, !GetAtt VpcAndSubnetsB.Outputs.PrivateSubnetId, !GetAtt VpcAndSubnetsC.Outputs.PrivateSubnetId]]
        TgwVpcIds: !Join [ ",", [!GetAtt VpcAndSubnetsA.Outputs.VpcId, !GetAtt VpcAndSubnetsB.Outputs.VpcId, !GetAtt VpcAndSubnetsC.Outputs.VpcId]]

  RouteTables:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/71_23_RouteTables.yaml"
      TimeoutInMinutes: 5
      Parameters:
        Bucket: !Ref Bucket
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        DestinationCidrBlock: "10.0.0.0/8"
        VpcIds: !Join [ ",", [!GetAtt VpcAndSubnetsA.Outputs.VpcId, !GetAtt VpcAndSubnetsB.Outputs.VpcId, !GetAtt VpcAndSubnetsC.Outputs.VpcId]]
        SubnetIds: !Join [ ",", [ !GetAtt VpcAndSubnetsA.Outputs.PublicSubnetId, !GetAtt VpcAndSubnetsA.Outputs.PrivateSubnetId, !GetAtt VpcAndSubnetsB.Outputs.PrivateSubnetId, !GetAtt VpcAndSubnetsC.Outputs.PrivateSubnetId  ] ]
        RouteTableNames: "A,B,C"
        InternetGatewayId: !GetAtt Gateway.Outputs.InternetGatewayId
        TransitGatewayId: !GetAtt Gateway.Outputs.TransitGatewayId
 
  Instances:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      TemplateURL: !Sub "https://${Bucket}.s3.eu-west-3.amazonaws.com/${BucketKey}/71_30_Instances.yaml"
      TimeoutInMinutes: 5
      Parameters:
        Bucket: !Ref Bucket
        EnvironmentName: !Ref EnvironmentName
        ProjectName: !Ref ProjectName
        KeyName: !Ref InstanceKeyName
        ApplicationAvailabilityZones: 
          Fn::Join:
            - ","
            - Fn::GetAZs: ""
        ApplicationImageId: !Ref ApplicationImageId
        ApplicationInstanceName: "Application"
        ApplicationInstanceType: !Ref InstanceType
        ApplicationSecurityGroups: !Join [",", [ !GetAtt SecurityGroups.Outputs.ApplicationASecurityGroupId, !GetAtt SecurityGroups.Outputs.ApplicationBSecurityGroupId, !GetAtt SecurityGroups.Outputs.ApplicationCSecurityGroupId ] ]
        ApplicationSubnetIds: !Join [ ",", [ !GetAtt VpcAndSubnetsA.Outputs.PrivateSubnetId, !GetAtt VpcAndSubnetsB.Outputs.PrivateSubnetId, !GetAtt VpcAndSubnetsC.Outputs.PrivateSubnetId  ] ]
        BastionAvailabilityZone: !Select [ 0, !GetAZs ]
        BastionImageId: !Ref BastionImageId
        BastionInstanceName: "Bastion"
        BastionInstanceType: !Ref InstanceType
        BastionSecurityGroup: !GetAtt SecurityGroups.Outputs.BastionSecurityGroupId
        BastionSubnetId: !GetAtt VpcAndSubnetsA.Outputs.PublicSubnetId
